# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.appendix_limits_rates_data import AppendixLimitsRatesData

class TestAppendixLimitsRatesData(unittest.TestCase):
    """AppendixLimitsRatesData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppendixLimitsRatesData:
        """Test AppendixLimitsRatesData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppendixLimitsRatesData`
        """
        model = AppendixLimitsRatesData()
        if include_optional:
            return AppendixLimitsRatesData(
                day = openapi_client.models.appendix_day_limits_rates_data.AppendixDayLimitsRatesData(
                    serp = openapi_client.models.appendix_serp_limits_rates_data_info.AppendixSerpLimitsRatesDataInfo(
                        task_post = 1.337, 
                        task_get = openapi_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                            regular = 1.337, 
                            advanced = 1.337, 
                            html = 1.337, ), 
                        tasks_ready = 1.337, 
                        locations = 1.337, 
                        languages = 1.337, 
                        live = openapi_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                            regular = 1.337, 
                            advanced = 1.337, 
                            html = 1.337, ), 
                        errors = 1.337, 
                        tasks_fixed = 1.337, 
                        jobs = openapi_client.models.appendix_jobs_serp_limits_rates_data_info.AppendixJobsSerpLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        screenshot = 1.337, ), 
                    total = 1.337, 
                    total_serp = 1.337, 
                    keywords_data = openapi_client.models.appendix_keywords_data_day_limits_rates_data.AppendixKeywordsDataDayLimitsRatesData(
                        keywords_for_keywords = openapi_client.models.appendix_info.AppendixInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, ), 
                        keywords_for_site = openapi_client.models.appendixe_keywords_data_day_limits_rates_data_info.AppendixeKeywordsDataDayLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        search_volume = openapi_client.models.appendixe_keywords_data_day_limits_rates_data_info.AppendixeKeywordsDataDayLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        ad_traffic_by_keywords = , 
                        languages = 1.337, 
                        locations = 1.337, 
                        tasks_ready = 1.337, 
                        explore = openapi_client.models.appendix_explore_keywords_data_limits_rates_data_info.AppendixExploreKeywordsDataLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        categories = 1.337, 
                        errors = 1.337, 
                        bing = openapi_client.models.appendix_bing_keywords_data_day_limits_rates_data.AppendixBingKeywordsDataDayLimitsRatesData(
                            keyword_performance = openapi_client.models.appendix_bing_keywords_data_day_limits_rates_data_info.AppendixBingKeywordsDataDayLimitsRatesDataInfo(), 
                            search_volume_history = openapi_client.models.appendix_bing_keywords_data_day_limits_rates_data_info.AppendixBingKeywordsDataDayLimitsRatesDataInfo(), ), 
                        keyword_performance = openapi_client.models.appendix_keyword_performance_keywords_data_limits_rates_data_info.AppendixKeywordPerformanceKeywordsDataLimitsRatesDataInfo(
                            task_post = 1.337, 
                            locations_and_languages = 1.337, ), 
                        search_volume_history = , 
                        google_ads = openapi_client.models.appendix_google_ads_keywords_data_limits_rates_data_info.AppendixGoogleAdsKeywordsDataLimitsRatesDataInfo(
                            status = 1.337, ), ), 
                    total_keywords_data = 1.337, 
                    appendix = {
                        'key' : 1.337
                        }, 
                    total_appendix = 1.337, 
                    dataforseo_labs = openapi_client.models.appendix_dataforseo_labs_limits_rates_data_info.AppendixDataforseoLabsLimitsRatesDataInfo(
                        locations_and_languages = 1.337, 
                        categories = 1.337, 
                        errors = 1.337, 
                        product_competitors = , 
                        product_keyword_intersections = , 
                        product_rank_overview = , 
                        ranked_keywords = , 
                        serp_competitors = , 
                        subdomains = , 
                        relevant_pages = , 
                        competitors_domain = , 
                        related_keywords = , 
                        domain_rank_overview = , 
                        domain_intersection = , 
                        page_intersection = , 
                        bulk_traffic_estimation = , 
                        bulk_keyword_difficulty = , 
                        bulk_search_volume = , 
                        keyword_suggestions = , 
                        keyword_ideas = , 
                        historical_search_volume = , 
                        categories_for_domain = , 
                        domain_metrics_by_categories = , 
                        top_searches = , 
                        domain_whois_overview = , 
                        historical_rank_overview = , 
                        keywords_for_categories = , 
                        historical_serps = , 
                        app_competitors = , 
                        keywords_for_app = , 
                        app_intersection = , 
                        bulk_app_metrics = , 
                        search_intent = , ), 
                    total_dataforseo_labs = 1.337, 
                    domain_analytics = openapi_client.models.appendix_domain_analytics_limits_rates_data_info.AppendixDomainAnalyticsLimitsRatesDataInfo(
                        tasks_ready = 1.337, 
                        errors = 1.337, 
                        whois = {
                            'key' : 
                            }, 
                        technologies = openapi_client.models.appendix_technologies_domain_analytics_limits_rates_data_info.AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo(
                            domain_technologies = , 
                            domains_by_technology = , 
                            languages = 1.337, 
                            locations = 1.337, 
                            aggregation_technologies = , 
                            technologies_summary = , 
                            domains_by_html_terms = , 
                            technology_stats = , ), ), 
                    total_domain_analytics = 1.337, 
                    merchant = openapi_client.models.appendix_merchant_limits_rates_data_info.AppendixMerchantLimitsRatesDataInfo(
                        google = openapi_client.models.appendix_merchant_google_info.AppendixMerchantGoogleInfo(
                            products = openapi_client.models.appendix_product_google_merchant_day_limits_rates_data_info.AppendixProductGoogleMerchantDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, ), 
                            sellers = openapi_client.models.appendix_sellers_google_merchant_limits_rates_data_info.AppendixSellersGoogleMerchantLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, 
                                ad_url = 1.337, ), 
                            product_spec = openapi_client.models.appendix_product_google_merchant_day_limits_rates_data_info.AppendixProductGoogleMerchantDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, ), 
                            product_info = , ), 
                        amazon = {
                            'key' : 
                            }, 
                        locations = 1.337, 
                        languages = 1.337, 
                        errors = 1.337, 
                        reviews = , ), 
                    total_merchant = 1.337, 
                    on_page = openapi_client.models.appendix_on_page_limits_rates_data_info.AppendixOnPageLimitsRatesDataInfo(
                        task_post = 1.337, 
                        tasks_ready = 1.337, 
                        summary = 1.337, 
                        resources = 1.337, 
                        pages = 1.337, 
                        non_indexable = 1.337, 
                        duplicate_tags = 1.337, 
                        links = 1.337, 
                        waterfall = 1.337, 
                        errors = 1.337, 
                        pages_by_resource = 1.337, 
                        duplicate_content = 1.337, 
                        raw_html = 1.337, 
                        instant_pages = 1.337, 
                        redirect_chains = 1.337, 
                        lighthouse = openapi_client.models.appendix_info.AppendixInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, ), 
                        keyword_density = 1.337, 
                        page_screenshot = 1.337, 
                        content_parsing = 1.337, 
                        content_parsing_live = 1.337, ), 
                    total_on_page = 1.337, 
                    business_data = openapi_client.models.appendix_business_data_limits_rates_data_info.AppendixBusinessDataLimitsRatesDataInfo(
                        locations = 1.337, 
                        languages = 1.337, 
                        errors = 1.337, 
                        yelp = {
                            'key' : openapi_client.models.appendixs_google_business_data_day_limits_rates_data_info.AppendixsGoogleBusinessDataDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, )
                            }, 
                        social_media = {
                            'key' : 
                            }, 
                        tripadvisor = {
                            'key' : openapi_client.models.appendixs_google_business_data_day_limits_rates_data_info.AppendixsGoogleBusinessDataDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, )
                            }, 
                        trustpilot = {
                            'key' : 
                            }, 
                        business_listings = openapi_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                            search = , 
                            categories_aggregation = , 
                            categories = 1.337, 
                            locations = 1.337, ), ), 
                    total_business_data = 1.337, 
                    backlinks = openapi_client.models.appendix_backlinks_limits_rates_data_info.AppendixBacklinksLimitsRatesDataInfo(
                        summary = , 
                        history = , 
                        content_duplicates = , 
                        domain_pages = , 
                        anchors = , 
                        referring_domains = , 
                        referring_networks = , 
                        bulk_ranks = , 
                        bulk_backlinks = , 
                        bulk_new_lost_backlinks = , 
                        bulk_new_lost_referring_domains = , 
                        bulk_referring_domains = , 
                        errors = 1.337, 
                        domain_pages_summary = , 
                        timeseries_summary = , 
                        timeseries_new_lost_summary = , 
                        competitors = , ), 
                    total_backlinks = 1.337, 
                    app_data = openapi_client.models.appendix_app_data_limits_rates_data_info.AppendixAppDataLimitsRatesDataInfo(
                        app_info = , 
                        app_list = , 
                        app_reviews = openapi_client.models.appendix_app_reviews_app_data_limits_rates_data_info.AppendixAppReviewsAppDataLimitsRatesDataInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, ), 
                        app_searches = , 
                        errors = 1.337, 
                        languages = 1.337, 
                        locations = 1.337, 
                        categories = 1.337, ), 
                    total_app_data = 1.337, 
                    content_analysis = openapi_client.models.appendix_content_analysis_limits_rates_data_info.AppendixContentAnalysisLimitsRatesDataInfo(
                        sentiment_analysis = , 
                        rating_distribution = , 
                        phrase_trends = , 
                        category_trends = , 
                        locations = 1.337, 
                        languages = 1.337, 
                        categories = 1.337, 
                        errors = 1.337, ), 
                    total_content_analysis = 1.337, 
                    content_generation = openapi_client.models.appendix_content_generation_limits_rates_data_info.AppendixContentGenerationLimitsRatesDataInfo(
                        generate = , 
                        generate_meta_tags = , 
                        generate_text = , 
                        paraphrase = , 
                        check_grammar = openapi_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                            languages = 1.337, ), 
                        text_summary = openapi_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                            languages = 1.337, ), 
                        generate_sub_topics = , ), 
                    total_content_generation = 1.337, 
                    total_traffic_analytics = 1.337, 
                    total_reviews = 1.337, 
                    total_social = 1.337, ),
                minute = openapi_client.models.appendix_data_info.AppendixDataInfo(
                    serp = openapi_client.models.appendix_serp_limits_rates_data_info.AppendixSerpLimitsRatesDataInfo(
                        task_post = 1.337, 
                        task_get = openapi_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                            regular = 1.337, 
                            advanced = 1.337, 
                            html = 1.337, ), 
                        tasks_ready = 1.337, 
                        locations = 1.337, 
                        languages = 1.337, 
                        live = openapi_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                            regular = 1.337, 
                            advanced = 1.337, 
                            html = 1.337, ), 
                        errors = 1.337, 
                        tasks_fixed = 1.337, 
                        jobs = openapi_client.models.appendix_jobs_serp_limits_rates_data_info.AppendixJobsSerpLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        screenshot = 1.337, ), 
                    total = 1.337, 
                    total_serp = 1.337, 
                    keywords_data = openapi_client.models.appendix_keywords_data_data_info.AppendixKeywordsDataDataInfo(
                        keywords_for_keywords = openapi_client.models.appendixe_keywords_data_day_limits_rates_data_info.AppendixeKeywordsDataDayLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        keywords_for_site = openapi_client.models.appendixe_keywords_data_day_limits_rates_data_info.AppendixeKeywordsDataDayLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        search_volume = , 
                        ad_traffic_by_keywords = , 
                        languages = 1.337, 
                        locations = 1.337, 
                        tasks_ready = 1.337, 
                        explore = openapi_client.models.appendix_explore_keywords_data_limits_rates_data_info.AppendixExploreKeywordsDataLimitsRatesDataInfo(
                            task_post = 1.337, ), 
                        categories = 1.337, 
                        errors = 1.337, 
                        bing = {
                            'key' : openapi_client.models.appendix_bing_keywords_data_day_limits_rates_data_info.AppendixBingKeywordsDataDayLimitsRatesDataInfo()
                            }, 
                        keyword_performance = openapi_client.models.appendix_keyword_performance_keywords_data_limits_rates_data_info.AppendixKeywordPerformanceKeywordsDataLimitsRatesDataInfo(
                            task_post = 1.337, 
                            locations_and_languages = 1.337, ), 
                        search_volume_history = , 
                        google_ads = openapi_client.models.appendix_google_ads_keywords_data_limits_rates_data_info.AppendixGoogleAdsKeywordsDataLimitsRatesDataInfo(
                            status = 1.337, ), 
                        naver = {
                            'key' : openapi_client.models.appendix_bing_keywords_data_day_limits_rates_data_info.AppendixBingKeywordsDataDayLimitsRatesDataInfo()
                            }, 
                        google = {
                            'key' : 
                            }, 
                        keyword_ideas_ads_api = openapi_client.models.appendix_keyword_ideas_ads_api_keywords_data_data_info.AppendixKeywordIdeasAdsApiKeywordsDataDataInfo(
                            tasks_ready = 1.337, ), ), 
                    total_keywords_data = 1.337, 
                    appendix = {
                        'key' : 1.337
                        }, 
                    total_appendix = 1.337, 
                    dataforseo_labs = openapi_client.models.appendix_dataforseo_labs_limits_rates_data_info.AppendixDataforseoLabsLimitsRatesDataInfo(
                        locations_and_languages = 1.337, 
                        categories = 1.337, 
                        errors = 1.337, 
                        product_competitors = , 
                        product_keyword_intersections = , 
                        product_rank_overview = , 
                        ranked_keywords = , 
                        serp_competitors = , 
                        subdomains = , 
                        relevant_pages = , 
                        competitors_domain = , 
                        related_keywords = , 
                        domain_rank_overview = , 
                        domain_intersection = , 
                        page_intersection = , 
                        bulk_traffic_estimation = , 
                        bulk_keyword_difficulty = , 
                        bulk_search_volume = , 
                        keyword_suggestions = , 
                        keyword_ideas = , 
                        historical_search_volume = , 
                        categories_for_domain = , 
                        domain_metrics_by_categories = , 
                        top_searches = , 
                        domain_whois_overview = , 
                        historical_rank_overview = , 
                        keywords_for_categories = , 
                        historical_serps = , 
                        app_competitors = , 
                        keywords_for_app = , 
                        app_intersection = , 
                        bulk_app_metrics = , 
                        search_intent = , ), 
                    total_dataforseo_labs = 1.337, 
                    domain_analytics = openapi_client.models.appendix_domain_analytics_limits_rates_data_info.AppendixDomainAnalyticsLimitsRatesDataInfo(
                        tasks_ready = 1.337, 
                        errors = 1.337, 
                        whois = {
                            'key' : 
                            }, 
                        technologies = openapi_client.models.appendix_technologies_domain_analytics_limits_rates_data_info.AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo(
                            domain_technologies = , 
                            domains_by_technology = , 
                            languages = 1.337, 
                            locations = 1.337, 
                            aggregation_technologies = , 
                            technologies_summary = , 
                            domains_by_html_terms = , 
                            technology_stats = , ), ), 
                    total_domain_analytics = 1.337, 
                    merchant = openapi_client.models.appendix_merchant_limits_rates_data_info.AppendixMerchantLimitsRatesDataInfo(
                        amazon = {
                            'key' : openapi_client.models.appendix_product_google_merchant_day_limits_rates_data_info.AppendixProductGoogleMerchantDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, )
                            }, 
                        locations = 1.337, 
                        languages = 1.337, 
                        errors = 1.337, 
                        reviews = openapi_client.models.appendix_product_google_merchant_day_limits_rates_data_info.AppendixProductGoogleMerchantDayLimitsRatesDataInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, ), ), 
                    total_merchant = 1.337, 
                    on_page = openapi_client.models.appendix_on_page_limits_rates_data_info.AppendixOnPageLimitsRatesDataInfo(
                        task_post = 1.337, 
                        tasks_ready = 1.337, 
                        summary = 1.337, 
                        resources = 1.337, 
                        pages = 1.337, 
                        non_indexable = 1.337, 
                        duplicate_tags = 1.337, 
                        links = 1.337, 
                        waterfall = 1.337, 
                        errors = 1.337, 
                        pages_by_resource = 1.337, 
                        duplicate_content = 1.337, 
                        raw_html = 1.337, 
                        instant_pages = 1.337, 
                        redirect_chains = 1.337, 
                        lighthouse = openapi_client.models.appendix_info.AppendixInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, ), 
                        keyword_density = 1.337, 
                        page_screenshot = 1.337, 
                        content_parsing = 1.337, 
                        content_parsing_live = 1.337, ), 
                    total_on_page = 1.337, 
                    business_data = openapi_client.models.appendix_business_data_limits_rates_data_info.AppendixBusinessDataLimitsRatesDataInfo(
                        locations = 1.337, 
                        languages = 1.337, 
                        errors = 1.337, 
                        yelp = {
                            'key' : openapi_client.models.appendixs_google_business_data_day_limits_rates_data_info.AppendixsGoogleBusinessDataDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, )
                            }, 
                        social_media = {
                            'key' : 
                            }, 
                        tripadvisor = {
                            'key' : openapi_client.models.appendixs_google_business_data_day_limits_rates_data_info.AppendixsGoogleBusinessDataDayLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, )
                            }, 
                        trustpilot = {
                            'key' : 
                            }, 
                        business_listings = openapi_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                            search = , 
                            categories_aggregation = , 
                            categories = 1.337, 
                            locations = 1.337, ), ), 
                    total_business_data = 1.337, 
                    backlinks = openapi_client.models.appendix_backlinks_limits_rates_data_info.AppendixBacklinksLimitsRatesDataInfo(
                        summary = , 
                        history = , 
                        content_duplicates = , 
                        domain_pages = , 
                        anchors = , 
                        referring_domains = , 
                        referring_networks = , 
                        bulk_ranks = , 
                        bulk_backlinks = , 
                        bulk_new_lost_backlinks = , 
                        bulk_new_lost_referring_domains = , 
                        bulk_referring_domains = , 
                        errors = 1.337, 
                        domain_pages_summary = , 
                        timeseries_summary = , 
                        timeseries_new_lost_summary = , 
                        competitors = , ), 
                    total_backlinks = 1.337, 
                    app_data = openapi_client.models.appendix_app_data_limits_rates_data_info.AppendixAppDataLimitsRatesDataInfo(
                        app_info = , 
                        app_list = , 
                        app_reviews = openapi_client.models.appendix_app_reviews_app_data_limits_rates_data_info.AppendixAppReviewsAppDataLimitsRatesDataInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, ), 
                        app_searches = , 
                        errors = 1.337, 
                        languages = 1.337, 
                        locations = 1.337, 
                        categories = 1.337, ), 
                    total_app_data = 1.337, 
                    content_analysis = openapi_client.models.appendix_content_analysis_limits_rates_data_info.AppendixContentAnalysisLimitsRatesDataInfo(
                        sentiment_analysis = , 
                        rating_distribution = , 
                        phrase_trends = , 
                        category_trends = , 
                        locations = 1.337, 
                        languages = 1.337, 
                        categories = 1.337, 
                        errors = 1.337, ), 
                    total_content_analysis = 1.337, 
                    content_generation = openapi_client.models.appendix_content_generation_limits_rates_data_info.AppendixContentGenerationLimitsRatesDataInfo(
                        generate = , 
                        generate_meta_tags = , 
                        generate_text = , 
                        paraphrase = , 
                        check_grammar = openapi_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                            languages = 1.337, ), 
                        text_summary = openapi_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                            languages = 1.337, ), 
                        generate_sub_topics = , ), 
                    total_content_generation = 1.337, 
                    total_traffic_analytics = 1.337, 
                    traffic_analytics = openapi_client.models.appendixs_minute_limits_rates_data_info.AppendixsMinuteLimitsRatesDataInfo(
                        tasks_ready = 1.337, 
                        errors = 1.337, ), 
                    total_reviews = 1.337, 
                    reviews = openapi_client.models.appendixs_minute_limits_rates_data_info.AppendixsMinuteLimitsRatesDataInfo(
                        tasks_ready = 1.337, 
                        errors = 1.337, ), 
                    total_social = 1.337, 
                    social = {
                        'key' : 1.337
                        }, )
            )
        else:
            return AppendixLimitsRatesData(
        )
        """

    def testAppendixLimitsRatesData(self):
        """Test AppendixLimitsRatesData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
