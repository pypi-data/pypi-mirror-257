# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  code-tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest tests -lvv -ra --doctest-modules --junitxml=junit/test-results.xml

  build:
    needs: code-tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Install dependencies
      run: pip install -r build-requirements.txt
    - name: Build the package
      run: python3 -m build
    - uses: actions/upload-artifact@v4
      with:
        name: packages
        path: dist/*

  package-tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"] 

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist
    - name: Display structure of downloaded files
      run: ls -R
    - name: Install dependancies
      run: |
        pip install -r requirements.txt
        pip install dist/*.whl
    - name: Test build package
      run: python -m pytest tests -lvv -ra --doctest-modules --junitxml=junit/test-results.xml

  upload:
    needs: package-tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist
    - name: Check files
      run: ls -Ra
    - name: Check dist
      run: ls -Ra dist
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Install dependencies
      run: pip install -r build-requirements.txt
    - name: Upload the package
      run: python3 -m twine upload --non-interactive --username __token__ --password ${{ secrets.PYPI_TOKEN }} dist/*