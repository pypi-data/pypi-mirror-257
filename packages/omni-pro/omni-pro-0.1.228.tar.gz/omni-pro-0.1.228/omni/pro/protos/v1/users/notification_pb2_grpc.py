# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni.pro.protos.v1.users import notification_pb2 as v1_dot_users_dot_notification__pb2


class NotificationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotificationCreate = channel.unary_unary(
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationCreate",
            request_serializer=v1_dot_users_dot_notification__pb2.NotificationCreateRequest.SerializeToString,
            response_deserializer=v1_dot_users_dot_notification__pb2.NotificationCreateResponse.FromString,
        )
        self.NotificationRead = channel.unary_unary(
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationRead",
            request_serializer=v1_dot_users_dot_notification__pb2.NotificationReadRequest.SerializeToString,
            response_deserializer=v1_dot_users_dot_notification__pb2.NotificationReadResponse.FromString,
        )
        self.NotificationUpdate = channel.unary_unary(
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationUpdate",
            request_serializer=v1_dot_users_dot_notification__pb2.NotificationUpdateRequest.SerializeToString,
            response_deserializer=v1_dot_users_dot_notification__pb2.NotificationUpdateResponse.FromString,
        )
        self.NotificationDelete = channel.unary_unary(
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationDelete",
            request_serializer=v1_dot_users_dot_notification__pb2.NotificationDeleteRequest.SerializeToString,
            response_deserializer=v1_dot_users_dot_notification__pb2.NotificationDeleteResponse.FromString,
        )
        self.Hidden = channel.unary_unary(
            "/pro.omni.oms.api.v1.users.notification.NotificationService/Hidden",
            request_serializer=v1_dot_users_dot_notification__pb2.HiddenRequest.SerializeToString,
            response_deserializer=v1_dot_users_dot_notification__pb2.HiddenResponse.FromString,
        )


class NotificationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NotificationCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def NotificationRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def NotificationUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def NotificationDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Hidden(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_NotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "NotificationCreate": grpc.unary_unary_rpc_method_handler(
            servicer.NotificationCreate,
            request_deserializer=v1_dot_users_dot_notification__pb2.NotificationCreateRequest.FromString,
            response_serializer=v1_dot_users_dot_notification__pb2.NotificationCreateResponse.SerializeToString,
        ),
        "NotificationRead": grpc.unary_unary_rpc_method_handler(
            servicer.NotificationRead,
            request_deserializer=v1_dot_users_dot_notification__pb2.NotificationReadRequest.FromString,
            response_serializer=v1_dot_users_dot_notification__pb2.NotificationReadResponse.SerializeToString,
        ),
        "NotificationUpdate": grpc.unary_unary_rpc_method_handler(
            servicer.NotificationUpdate,
            request_deserializer=v1_dot_users_dot_notification__pb2.NotificationUpdateRequest.FromString,
            response_serializer=v1_dot_users_dot_notification__pb2.NotificationUpdateResponse.SerializeToString,
        ),
        "NotificationDelete": grpc.unary_unary_rpc_method_handler(
            servicer.NotificationDelete,
            request_deserializer=v1_dot_users_dot_notification__pb2.NotificationDeleteRequest.FromString,
            response_serializer=v1_dot_users_dot_notification__pb2.NotificationDeleteResponse.SerializeToString,
        ),
        "Hidden": grpc.unary_unary_rpc_method_handler(
            servicer.Hidden,
            request_deserializer=v1_dot_users_dot_notification__pb2.HiddenRequest.FromString,
            response_serializer=v1_dot_users_dot_notification__pb2.HiddenResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.v1.users.notification.NotificationService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class NotificationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NotificationCreate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationCreate",
            v1_dot_users_dot_notification__pb2.NotificationCreateRequest.SerializeToString,
            v1_dot_users_dot_notification__pb2.NotificationCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def NotificationRead(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationRead",
            v1_dot_users_dot_notification__pb2.NotificationReadRequest.SerializeToString,
            v1_dot_users_dot_notification__pb2.NotificationReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def NotificationUpdate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationUpdate",
            v1_dot_users_dot_notification__pb2.NotificationUpdateRequest.SerializeToString,
            v1_dot_users_dot_notification__pb2.NotificationUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def NotificationDelete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.users.notification.NotificationService/NotificationDelete",
            v1_dot_users_dot_notification__pb2.NotificationDeleteRequest.SerializeToString,
            v1_dot_users_dot_notification__pb2.NotificationDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Hidden(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.users.notification.NotificationService/Hidden",
            v1_dot_users_dot_notification__pb2.HiddenRequest.SerializeToString,
            v1_dot_users_dot_notification__pb2.HiddenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
