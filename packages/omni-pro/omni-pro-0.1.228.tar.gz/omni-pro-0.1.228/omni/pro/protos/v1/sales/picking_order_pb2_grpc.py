# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni.pro.protos.v1.sales import picking_order_pb2 as v1_dot_sales_dot_picking__order__pb2


class PickingOrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PickingOrderCreate = channel.unary_unary(
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderCreate",
            request_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderCreateRequest.SerializeToString,
            response_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderCreateResponse.FromString,
        )
        self.PickingOrderRead = channel.unary_unary(
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderRead",
            request_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderReadRequest.SerializeToString,
            response_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderReadResponse.FromString,
        )
        self.PickingOrderUpdate = channel.unary_unary(
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderUpdate",
            request_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderUpdateRequest.SerializeToString,
            response_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderUpdateResponse.FromString,
        )
        self.PickingOrderDelete = channel.unary_unary(
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderDelete",
            request_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderDeleteRequest.SerializeToString,
            response_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderDeleteResponse.FromString,
        )


class PickingOrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PickingOrderCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PickingOrderRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PickingOrderUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PickingOrderDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_PickingOrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "PickingOrderCreate": grpc.unary_unary_rpc_method_handler(
            servicer.PickingOrderCreate,
            request_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderCreateRequest.FromString,
            response_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderCreateResponse.SerializeToString,
        ),
        "PickingOrderRead": grpc.unary_unary_rpc_method_handler(
            servicer.PickingOrderRead,
            request_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderReadRequest.FromString,
            response_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderReadResponse.SerializeToString,
        ),
        "PickingOrderUpdate": grpc.unary_unary_rpc_method_handler(
            servicer.PickingOrderUpdate,
            request_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderUpdateRequest.FromString,
            response_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderUpdateResponse.SerializeToString,
        ),
        "PickingOrderDelete": grpc.unary_unary_rpc_method_handler(
            servicer.PickingOrderDelete,
            request_deserializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderDeleteRequest.FromString,
            response_serializer=v1_dot_sales_dot_picking__order__pb2.PickingOrderDeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.v1.sales.picking.order.PickingOrderService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class PickingOrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PickingOrderCreate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderCreate",
            v1_dot_sales_dot_picking__order__pb2.PickingOrderCreateRequest.SerializeToString,
            v1_dot_sales_dot_picking__order__pb2.PickingOrderCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PickingOrderRead(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderRead",
            v1_dot_sales_dot_picking__order__pb2.PickingOrderReadRequest.SerializeToString,
            v1_dot_sales_dot_picking__order__pb2.PickingOrderReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PickingOrderUpdate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderUpdate",
            v1_dot_sales_dot_picking__order__pb2.PickingOrderUpdateRequest.SerializeToString,
            v1_dot_sales_dot_picking__order__pb2.PickingOrderUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PickingOrderDelete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.sales.picking.order.PickingOrderService/PickingOrderDelete",
            v1_dot_sales_dot_picking__order__pb2.PickingOrderDeleteRequest.SerializeToString,
            v1_dot_sales_dot_picking__order__pb2.PickingOrderDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
