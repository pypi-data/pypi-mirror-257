# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni.pro.protos.v1.utilities import tax_pb2 as v1_dot_utilities_dot_tax__pb2


class TaxServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TaxAdd = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxAdd",
            request_serializer=v1_dot_utilities_dot_tax__pb2.TaxAddRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_tax__pb2.TaxAddResponse.FromString,
        )
        self.TaxRead = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxRead",
            request_serializer=v1_dot_utilities_dot_tax__pb2.TaxReadRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_tax__pb2.TaxReadResponse.FromString,
        )
        self.TaxUpdate = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxUpdate",
            request_serializer=v1_dot_utilities_dot_tax__pb2.TaxUpdateRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_tax__pb2.TaxUpdateResponse.FromString,
        )
        self.TaxDelete = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxDelete",
            request_serializer=v1_dot_utilities_dot_tax__pb2.TaxDeleteRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_tax__pb2.TaxDeleteResponse.FromString,
        )


class TaxServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TaxAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TaxRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TaxUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TaxDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_TaxServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "TaxAdd": grpc.unary_unary_rpc_method_handler(
            servicer.TaxAdd,
            request_deserializer=v1_dot_utilities_dot_tax__pb2.TaxAddRequest.FromString,
            response_serializer=v1_dot_utilities_dot_tax__pb2.TaxAddResponse.SerializeToString,
        ),
        "TaxRead": grpc.unary_unary_rpc_method_handler(
            servicer.TaxRead,
            request_deserializer=v1_dot_utilities_dot_tax__pb2.TaxReadRequest.FromString,
            response_serializer=v1_dot_utilities_dot_tax__pb2.TaxReadResponse.SerializeToString,
        ),
        "TaxUpdate": grpc.unary_unary_rpc_method_handler(
            servicer.TaxUpdate,
            request_deserializer=v1_dot_utilities_dot_tax__pb2.TaxUpdateRequest.FromString,
            response_serializer=v1_dot_utilities_dot_tax__pb2.TaxUpdateResponse.SerializeToString,
        ),
        "TaxDelete": grpc.unary_unary_rpc_method_handler(
            servicer.TaxDelete,
            request_deserializer=v1_dot_utilities_dot_tax__pb2.TaxDeleteRequest.FromString,
            response_serializer=v1_dot_utilities_dot_tax__pb2.TaxDeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.v1.utilities.tax.TaxService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class TaxService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TaxAdd(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxAdd",
            v1_dot_utilities_dot_tax__pb2.TaxAddRequest.SerializeToString,
            v1_dot_utilities_dot_tax__pb2.TaxAddResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def TaxRead(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxRead",
            v1_dot_utilities_dot_tax__pb2.TaxReadRequest.SerializeToString,
            v1_dot_utilities_dot_tax__pb2.TaxReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def TaxUpdate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxUpdate",
            v1_dot_utilities_dot_tax__pb2.TaxUpdateRequest.SerializeToString,
            v1_dot_utilities_dot_tax__pb2.TaxUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def TaxDelete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.tax.TaxService/TaxDelete",
            v1_dot_utilities_dot_tax__pb2.TaxDeleteRequest.SerializeToString,
            v1_dot_utilities_dot_tax__pb2.TaxDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
