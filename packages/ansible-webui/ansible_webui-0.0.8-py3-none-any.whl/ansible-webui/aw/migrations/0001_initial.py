# Generated by Django 4.2.10 on 2024-02-16 19:30

import aw.model.job
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AwAPIKey',
            fields=[
                ('id', models.CharField(editable=False, max_length=150, primary_key=True, serialize=False, unique=True)),
                ('prefix', models.CharField(editable=False, max_length=8, unique=True)),
                ('hashed_key', models.CharField(editable=False, max_length=150)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(default=None, help_text='A free-form name for the API key. Need not be unique. 50 characters max.', max_length=50)),
                ('revoked', models.BooleanField(blank=True, default=False, help_text='If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Once API key expires, clients cannot use it anymore.', null=True, verbose_name='Expires')),
            ],
            options={
                'verbose_name': 'API key',
                'verbose_name_plural': 'API keys',
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('limit', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('verbosity', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'v'), (2, 'vv'), (3, 'vvv'), (4, 'vvvv'), (5, 'vvvv'), (6, 'vvvvvv')], default=0)),
                ('comment', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('mode_diff', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('mode_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('environment_vars', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('tags', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('tags_skip', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('cmd_args', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('name', models.CharField(max_length=150)),
                ('inventory_file', models.CharField(max_length=300)),
                ('playbook_file', models.CharField(max_length=100)),
                ('schedule', models.CharField(blank=True, default=None, max_length=50, null=True, validators=[aw.model.job.validate_cronjob])),
                ('enabled', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True)),
                ('credentials_needed', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobCredentialsPermissionMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='JobError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('short', models.CharField(max_length=100)),
                ('med', models.TextField(max_length=1024, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('limit', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('verbosity', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'v'), (2, 'vv'), (3, 'vvv'), (4, 'vvvv'), (5, 'vvvv'), (6, 'vvvvvv')], default=0)),
                ('comment', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('mode_diff', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('mode_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('environment_vars', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('tags', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('tags_skip', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('cmd_args', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Waiting'), (1, 'Starting'), (2, 'Running'), (3, 'Failed'), (4, 'Finished'), (5, 'Stopping'), (6, 'Stopped')], default=0)),
                ('log_stdout', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('log_stderr', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('command', models.CharField(blank=True, default=None, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobExecutionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_fin', models.DateTimeField(blank=True, default=None, null=True)),
                ('failed', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobExecutionResultHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('hostname', models.CharField(max_length=300)),
                ('unreachable', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('tasks_skipped', models.PositiveSmallIntegerField(default=0)),
                ('tasks_ok', models.PositiveSmallIntegerField(default=0)),
                ('tasks_failed', models.PositiveSmallIntegerField(default=0)),
                ('tasks_rescued', models.PositiveSmallIntegerField(default=0)),
                ('tasks_ignored', models.PositiveSmallIntegerField(default=0)),
                ('tasks_changed', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobGlobalCredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100)),
                ('connect_user', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('become_user', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('vault_file', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('vault_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('_enc_vault_pass', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('_enc_become_pass', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('_enc_connect_pass', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('_enc_ssh_key', models.CharField(blank=True, default=None, max_length=5000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100)),
                ('permission', models.PositiveSmallIntegerField(choices=[(0, 'None'), (5, 'Read'), (10, 'Execute'), (15, 'Write'), (20, 'Full')], default=0)),
                ('credentials', models.ManyToManyField(through='aw.JobCredentialsPermissionMapping', to='aw.jobglobalcredentials')),
            ],
        ),
        migrations.CreateModel(
            name='JobUserCredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100)),
                ('connect_user', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('become_user', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('vault_file', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('vault_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('_enc_vault_pass', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('_enc_become_pass', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('_enc_connect_pass', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('_enc_ssh_key', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobqueue_fk_job', to='aw.job')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobqueue_fk_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobPermissionMemberUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aw.jobpermission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobPermissionMemberGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aw.jobpermission')),
            ],
        ),
        migrations.CreateModel(
            name='JobPermissionMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aw.job')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aw.jobpermission')),
            ],
        ),
        migrations.AddField(
            model_name='jobpermission',
            name='groups',
            field=models.ManyToManyField(through='aw.JobPermissionMemberGroup', to='auth.group'),
        ),
        migrations.AddField(
            model_name='jobpermission',
            name='jobs',
            field=models.ManyToManyField(through='aw.JobPermissionMapping', to='aw.job'),
        ),
        migrations.AddField(
            model_name='jobpermission',
            name='users',
            field=models.ManyToManyField(through='aw.JobPermissionMemberUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='jobglobalcredentials',
            constraint=models.UniqueConstraint(fields=('name',), name='jobcreds_name'),
        ),
        migrations.AddField(
            model_name='jobexecutionresulthost',
            name='error',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobresulthost_fk_error', to='aw.joberror'),
        ),
        migrations.AddField(
            model_name='jobexecutionresulthost',
            name='result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobresulthost_fk_result', to='aw.jobexecutionresult'),
        ),
        migrations.AddField(
            model_name='jobexecutionresult',
            name='error',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobresult_fk_error', to='aw.joberror'),
        ),
        migrations.AddField(
            model_name='jobexecution',
            name='credential_global',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobexec_fk_credglob', to='aw.jobglobalcredentials'),
        ),
        migrations.AddField(
            model_name='jobexecution',
            name='credential_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobexec_fk_credusr', to='aw.jobusercredentials'),
        ),
        migrations.AddField(
            model_name='jobexecution',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobexec_fk_job', to='aw.job'),
        ),
        migrations.AddField(
            model_name='jobexecution',
            name='result',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobexec_fk_result', to='aw.jobexecutionresult'),
        ),
        migrations.AddField(
            model_name='jobexecution',
            name='user',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobexec_fk_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='jobexecution',
            name='user_credentials',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobexec_fk_usercreds', to='aw.job'),
        ),
        migrations.AddField(
            model_name='jobcredentialspermissionmapping',
            name='credentials',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aw.jobglobalcredentials'),
        ),
        migrations.AddField(
            model_name='jobcredentialspermissionmapping',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aw.jobpermission'),
        ),
        migrations.AddField(
            model_name='job',
            name='credentials_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_fk_creddflt', to='aw.jobglobalcredentials'),
        ),
        migrations.AddField(
            model_name='awapikey',
            name='user',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='jobusercredentials',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='jobusercreds_user_name'),
        ),
        migrations.AddConstraint(
            model_name='jobpermissionmemberuser',
            constraint=models.UniqueConstraint(fields=('user', 'permission'), name='jobpermmemberuser_unique'),
        ),
        migrations.AddConstraint(
            model_name='jobpermissionmembergroup',
            constraint=models.UniqueConstraint(fields=('group', 'permission'), name='jobpermmembergrp_unique'),
        ),
        migrations.AddConstraint(
            model_name='jobpermissionmapping',
            constraint=models.UniqueConstraint(fields=('job', 'permission'), name='jobpermmap_unique'),
        ),
        migrations.AddConstraint(
            model_name='jobpermission',
            constraint=models.UniqueConstraint(fields=('name',), name='jobperm_name_unique'),
        ),
        migrations.AddConstraint(
            model_name='jobcredentialspermissionmapping',
            constraint=models.UniqueConstraint(fields=('credentials', 'permission'), name='jobcredpermmap_unique'),
        ),
        migrations.AddConstraint(
            model_name='job',
            constraint=models.UniqueConstraint(fields=('name',), name='job_name_unique'),
        ),
    ]
