Metadata-Version: 2.1
Name: trill
Version: 0.0.11
Summary: Troll language parser and interpreter.
Project-URL: Homepage, https://github.com/gregersn/Trill
Author-email: Greger Stolt Nilsen <gregersn@gmail.com>
License: Copyright © 2022-2023 Greger Stolt Nilsen
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
License-File: LICENSE
Keywords: dice,interpreter,troll
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: rich
Requires-Dist: typer>=0.6.1
Description-Content-Type: text/markdown

Trill is a Troll interpreter

Implemented in Python both as a package and for command line use.

Troll is a dice roll language made by Torben Mogensen  
http://hjemmesider.diku.dk/~torbenm/Troll/

## Command line usage

Rolling a single die: `trill d12`

Rolling multiple die: `trill 3d6`

## Use from a python script

```
from trill import trill

result, errors = trill("3d6")
```

See further examples in the examples folder.


## Running tests

`make test`

## Running coverage

`make coverage`


## Development

Currently in a very early state.
Most of the notation is not yet implemented.
See the list below for what is, and what is not (supposed) to work yet.

### Notation

(From summary on quick reference http://hjemmesider.diku.dk/~torbenm/Troll/quickRef.html)

- [x] roll one dn (1 - n)
- [x] roll m dn
- [x] roll one zn (0 - n)
- [x] roll m zn
- [x] arithmetic on single value (+ - \* / mod)
- [x] _sgn_, sign of number
- [x] _sum_, add up values in collection
- [x] _count_ values in collection
- [x] Union of collections (U or @)
- [x] Union of elements { }
- [x] _min_ and _max_ in collection
- [x] all _minimal_ and all _maximal_ values in collection
- [x] _median_ value in collection
- [x] _least_ n and 
- [x] _largest_ n values in collection
- [x] m samples of e ( # )
- [x] range of values ( .. )
- [x] _choose_ value from collection
- [x] _pick_ n values from collection e
- [x] filters (< <= > >= = =/=)
- [x] _drop_ elements
- [x] _keep_ elements
- [x] multiset difference ( -- )
- [x] remove duplicates ( _different_ )
- [x] conditional ( if-then-else )
- [x] probability ( ?p )
- [x] logical and ( & )
- [x] logical not ( ! )
- [x] bind x to value of e1 in e2 ( _x := e1; e2_ )
- [x] _foreach x in e1 do e2_
- [x] _repeat x := e1 while/until e2_
- [x] _accumulate x := e1 while/until e2_
- [x] _function_
- [x] _compositional_
- [x] _call_
- [x] text box of single sample ( ' )
- [x] text box of n samples ( n ' )
- [x] combine text boxes horisontally ( || )
- [x] combine text boxes vertically, left-aligned ( |> )
- [x] combine text boxes vertically, right-aligned ( <| )
- [x] combine text boxes, centre-aligned ( <> )
- [x] Pair of e1,e2 ( [e1, e2])
- [x] First component of pair ( %1 )
- [x] Second component of pair ( %2 )
- [x] x~v returns value of x if x is defined, else returns v
