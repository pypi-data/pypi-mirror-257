[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pytermor"
dynamic = ["version"]
description = "ANSI formatted terminal output toolset"
readme = "README.md"
license = "LGPL-3.0"
requires-python = ">=3.8"
platforms = ["linux"]
keywords = ["color", "format", "console", "terminal", "ansi", "sgr", "text"]
authors = [
    { name = "Aleksandr Shavykin", email = "0.delameter@gmail.com" },
]
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Filters",
]
dependencies = []

[project.optional-dependencies]
fast = [
    "numpy~=1.26.3",
    "scipy~=1.11.4",
]
demo = [
    "pygments~=2.15",
    "PyYAML==6.0.1",
    "rich~=12.6",
]
build = [
    "build~=0.8",
    'docutils-stubs~=0.0.22',
    "furo~=2022.6",
    "matplotlib~=3.7",
    "Pillow~=9.1",
    "pydeps~=1.10",
    "PyYAML==6.0.1",
    "sphinx-copybutton~=0.5",
    "sphinx-design~=0.5",
    "sphinx-toolbox~=3.3",
    "sphinx~=5.3",
    "twine~=4.0",
]
test = [
    "coverage[toml]~=6.4",
    "coveralls~=3.3",
    "pytest~=7.1",
    "pytest-cov~=4.1",
    "sybil~=3.0",
    "typing-extensions~=4.6",
]

[project.urls]
"Homepage" = "https://github.com/delameter/pytermor"
"Bug Tracker" = "https://github.com/delameter/pytermor/issues"
"Changelog" = "https://github.com/delameter/pytermor/blob/master/CHANGES.rst"

# =========================================================

[tool.hatch.version]
path = "pytermor/_version.py"

[tool.hatch.publish.index]
disable = true

[tool.hatch.build.targets.sdist]
include = [
    "/examples",
    "/pytermor",
    "/requirements",
    "/tests",
]

[tool.hatch.env]
requires = [
    "hatch-pip-compile",
]

[tool.hatch.envs.default]
type = "pip-compile"
#pip-compile-hashes = true

[tool.hatch.envs.default.scripts]
version = "python -m pytermor"
importtime = "python -qX importtime -m pytermor 2> import.log && tuna import.log"

[tool.hatch.envs.demo]
features = ["fast", "demo"]

[tool.hatch.envs.build]
features = ["fast", "build"]

[tool.hatch.envs.test]
features = ["fast", "test"]

[tool.hatch.envs.test.scripts]
test = "pytest"

# =========================================================

[tool.black]
line-length = 89
target-version = ['py37']

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = [
    "pytermor",
    "tests",
    "docs/pages",
]
addopts = [
    "-p", "no:doctest",
    "--strict-config",
    "--strict-markers",
    "--maxfail", "15",
    "--durations", "5",
]
xfail_strict = true
markers = [
    "config(**kwargs): override module config variables",
    "dynamic_style(**kwargs): make dynamic color and set up dynamic style",
    "deferred(): make deferred dynamic color, set up dynamic style and resolver",
]

[tool.coverage.run]
source = ["pytermor"]
branch = true
omit = [
    "*/__init__.py",
    "pytermor/__main__.py",
    "pytermor/_version.py",
    "pytermor/cval.py",
    "pytermor/dev/*",
]
relative_files = true
dynamic_context = "test_function"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __debug__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "raise LogicError",
    "if 0:",
    "^\\s*\\.\\.\\.\\s*$",
    "if __name__ == .__main__.:",
    "[A-Z0-9_]+ *= *((Sequence|Color|Style)\\w*\\([]' ,.\\w=[]+\\)?|[A-Z0-9_]+)(\\s*#.+)?$",
    "class SeqIndex.+",
    "class SgrDebugger.+",
    "def repr_attrs\\(.+",
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage-report"
title = "pytermor coverage report"
