variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

check-versions:
  image: python:3.11
  cache:
    paths:
      - .cache/pip
  before_script:
    - python --version ; pip --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install pytest numpy matplotlib scipy
  script:
    - python testversion.py

pretest:
  image: python:3.11
  needs:
    - job: check-versions
  cache:
    paths:
      - .cache/pip
  before_script:
    - python --version ; pip --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install pytest numpy matplotlib scipy
  script:
    - python -m pytest tests/*

################################################################################
# PIP
################################################################################

build-pip:
  image: python:3.11
  cache:
    paths:
      - .cache/pip
  needs:
    - job: pretest
  before_script:
    - python --version ; pip --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/*

test-pip:
  image: python:3.11
  cache:
    paths:
      - .cache/pip
  before_script:
    - python --version ; pip --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install build
  needs:
    - job: build-pip
      artifacts: true
  before_script:
    - python -m pip install dist/quantumsculpt-*.whl
    - python -m pip install numpy scipy matplotlib pytest
  script:
    - python -m pytest tests/*

deploy-pip:
  image: python:3.11
  cache:
    paths:
      - .cache/pip
  before_script:
    - python --version ; pip --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install build
  needs:
    - job: build-pip
      artifacts: true
    - job: test-pip
  before_script:
    - python -m pip install twine
  script:
    - twine upload -u __token__ -p ${pypi_token} dist/*
  only:
    - tags
  except:
    - branches

deployment-pip-verification:
  image: python:3.11
  cache:
    paths:
      - .cache/pip
  before_script:
    - python --version ; pip --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install build
  needs:
    - job: deploy-pip
  before_script:
    - python -m pip install numpy scipy matplotlib pytest quantumsculpt
  script:
    - python -m pytest tests/*
  only:
    - tags
  except:
    - branches

################################################################################
# ANACONDA
################################################################################
build-conda:
  image: continuumio/miniconda3:23.10.0-1
  cache:
    key:
      files:
        - environment.yml
  needs:
    - job: check-versions
    - job: pretest
  before_script:
    - rm pyproject.toml                        # ignore pyproject.toml file
    - conda install conda-build
    - conda install numpy scipy
    - conda install -c conda-forge matplotlib
  script:
    - ls -alh samples/hco_gasphase
    - conda build . --output-folder conda-bld/
  artifacts:
    paths:
      - conda-bld/noarch/*

deploy-anaconda:
  image: continuumio/miniconda3:23.10.0-1
  cache:
    key:
      files:
        - environment.yml
  before_script:
    - rm pyproject.toml                        # ignore pyproject.toml file
    - conda install anaconda-client
  needs:
    - job: build-conda
      artifacts: true
  script:
    - anaconda -t ${anaconda_token} upload -u ${anaconda_user} conda-bld/noarch/quantumsculpt-*.tar.bz2
  only:
    - tags
  except:
    - branches

################################################################################
# Documentation
################################################################################

# build the Sphinx documentation
build-docs:
  image: ghcr.io/ifilot/sphinx:v0.9.0
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - pushd examples/colors
    - python listcolors.py
    - mkdir -pv ../../docs/_static/img/colors
    - cp -v colors.png ../../docs/_static/img/colors/colors.png
    - popd
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/_build/html/
    expire_in: 1 hour

# copy the documentation over to Gitlab pages
pages: # do not change this name
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  needs:
    - job: build-docs
      artifacts: true
  script:
    - cp -rv docs/_build/html public
  artifacts:
    paths:
      - public
    expire_in: 1 week
