[build-system]
requires = ["scikit-build-core>=0.3.3", "pybind11"]
build-backend = "scikit_build_core.build"

[tool.mypy]
# files = "setup.py"
python_version = "3.10"
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true


[[tool.mypy.overrides]]
ignore_missing_imports = true

[project]
name = "PyVSparse"
version = "0.4.3"
authors = [
    {name = "Seth Wolfgang", email = "wolfgangseth@gmail.com"}
]
description = "A Python wrapper for IVSparse"
readme = "README.md"
License = "Apache-2.0"
requires-python = ">=3.9"
dependencies = [
    "numpy ~= 1.26.0", 
    "scipy ~=1.11.2",
    "matplotlib~=3.8.0",
]
install_requires = [
    "numpy ~= 1.26.0", 
    "scipy ~=1.11.2",
    "matplotlib~=3.8.0",
]



[project.urls]
IVSparse = "https://github.com/Seth-Wolfgang/IVSparse"
PyVSparse = "https://github.com/Seth-Wolfgang/PyVSparse"
PyVSparse-Issues = "https://github.com/Seth-Wolfgang/PyVSparse/issues"


[project.optional-dependencies]
test = ["pytest"]

[tool.scikit-build]
wheel.expand-macos-universal-tags = true

[tool.pytest.ini_options]
testpaths = ["tests/tests.py"]
# filterwarnings = [
    # "error",
# ]

[tool.cibuildwheel]
test-command = "pytest {project}/tests/tests.py"
test-extras = ["test"]
test-skip = ["*universal2:arm64"]
build-verbosity = 1

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR",    # Design related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]
