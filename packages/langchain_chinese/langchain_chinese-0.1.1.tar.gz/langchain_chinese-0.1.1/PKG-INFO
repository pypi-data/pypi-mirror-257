Metadata-Version: 2.1
Name: langchain_chinese
Version: 0.1.1
Summary: prepare some firendly tool for Chinese LLMs and langchain
License: MIT
Author: arcstep
Author-email: 43801@qq.com
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: zhipu (>=1.0.1,<2.0.0)
Description-Content-Type: text/markdown

# langchain_chinese
提供中文大语言模型和中文友好的 langchain 工具

## 安装

你可以从github上直接下载包：
```
pip install git+https://github.com/arcstep/langchain_chinese.git@v0.1
```

然后在 langchain 项目中引入：
```
from langchain_chinese import ZhipuaiChat
```

## 在 JupyterLab 中运行示例代码
项目源码中 /notes 目录有一些示例代码，可以尝试在 Jupyter 中运行。

如果不熟悉 Jupyter 环境，下面是一个简单的指南。

### 准备 Python 3.9 版本以上的环境
建议使用虚拟环境，如 pyenv、conda或poetry，这里以 pyenv + poetry为例。

### 确保安装 JupyterLab

要安装 JupyterLab，你可以使用 Python 的包管理器 pip。在你的命令行中运行以下命令：

```bash
pip install jupyterlab
```

如果你正在使用一个特定的 Python 虚拟环境，或者你想要为一个特定的 Python 项目安装 JupyterLab，你应该在那个环境中运行这个命令。

如果你正在使用 Poetry 来管理你的 Python 项目，你可以使用以下命令来安装 JupyterLab：

```bash
poetry add jupyterlab
```

安装完成后，你可以通过在命令行中运行 `jupyter lab` 来启动 JupyterLab。

### 在 JupyterLab 中使用专门的 ipykernel

要在 Poetry 环境中创建一个 JupyterLab 可用的 kernel，你需要先确保你已经安装了 `ipykernel` 包。你可以使用以下命令在你的 Poetry 环境中安装 `ipykernel`：

```bash
poetry add ipykernel
```

然后，你可以使用以下命令在你的 Poetry 环境中创建一个新的 Jupyter kernel：

```bash
poetry run python -m ipykernel install --user --name=langchain_chinese_kernel
```

在这个命令中，`langchain_chinese_kernel` 是你的新 kernel 的名称，你可以根据你的需要更改它。

现在，当你启动 JupyterLab 时，你应该能在 kernel 列表中看到你的新 kernel。你可以通过选择这个新 kernel 来在你的 Poetry 环境中运行 Jupyter notebook。
