[metadata]
name = xotl.plato
version = attr: xotl.plato.release.VERSION
description = 'Basic (non-recursive) "platonic" schemata'
long_description = file: README.rst
classifiers =
   Programming Language :: Python

author = Merchise Autrement [~º/~]
author_email = info@merchise.org
maintainer = Manuel Vázquez Acosta
license = MIT
url = https://gitlab.com/merchise-autrement/xotl.plato
project_urls =
   Documentation=https://merchise-autrement.gitlab.io/xotl.plato/
   Bug Tracker=https://gitlab.com/merchise-autrement/xotl.plato/issues

[options]
zip_safe = False
packages = find_namespace:
namespace_packages = xotl
include_package_data = True
python_requires = >=3.8
install_requires =
   xotl.tools>=2.2.1
   xotless>=3.8.0,<4.0
   backports.zoneinfo; python_version < '3.9'
   typing_extensions; python_version < '3.9'
   tzdata
   hypothesis>=6.30,<7.0
   immutables>=0.17

[options.extras_require]
pytz =
   pytz
dev =
   tox
   pytest
   hypothesis>=6.39,<7.0
   pytest-cov
   Sphinx>=4.4.0,<5.0
   mypy==0.941
   flake8-bugbear==22.1.11
   flake8~=4.0.1
   black~=22.1.0
   isort~=5.10.1
   types-backports
   coverage
   pytz; python_version < '3.9'
   ipython
   ipdb
   furo

[flake8]
exclude = .tox,.git,docs/*,build/*
select = E,W
ignore = E402,E501,E731,E741,W504,W503,B011,B950


[coverage:run]
branch = False


[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    def __hash__
    def __str__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    return NotImplemented

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

skip_covered = true
show_missing = true
omit =
   xotl/plato/release.py
   xotl/plato/base.py
   xotl/plato/testing.py
   tests/**
