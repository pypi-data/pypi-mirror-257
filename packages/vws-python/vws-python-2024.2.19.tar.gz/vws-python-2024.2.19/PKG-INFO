Metadata-Version: 2.1
Name: vws-python
Version: 2024.2.19
Summary: Interact with the Vuforia Web Services (VWS) API.
Author-email: Adam Dangoor <adamdangoor@gmail.com>
License: The MIT License
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
        
Project-URL: Documentation, https://vws-python.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/VWS-Python/vws-python
Keywords: client,vuforia,vws
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.12
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: requests
Requires-Dist: urllib3
Requires-Dist: VWS-Auth-Tools
Provides-Extra: dev
Requires-Dist: actionlint-py==1.6.26.11; extra == "dev"
Requires-Dist: check-manifest==0.49; extra == "dev"
Requires-Dist: doc8==1.1.1; extra == "dev"
Requires-Dist: freezegun==1.4.0; extra == "dev"
Requires-Dist: furo==2024.1.29; extra == "dev"
Requires-Dist: mypy==1.8.0; extra == "dev"
Requires-Dist: pip_check_reqs==2.5.3; extra == "dev"
Requires-Dist: pydocstyle==6.3; extra == "dev"
Requires-Dist: pyenchant==3.2.2; extra == "dev"
Requires-Dist: Pygments==2.17.2; extra == "dev"
Requires-Dist: pylint==3.0.3; extra == "dev"
Requires-Dist: pyproject-fmt==1.7.0; extra == "dev"
Requires-Dist: pyright==1.1.350; extra == "dev"
Requires-Dist: pyroma==4.2; extra == "dev"
Requires-Dist: pytest==8.0.1; extra == "dev"
Requires-Dist: pytest-cov==4.1; extra == "dev"
Requires-Dist: PyYAML==6.0.1; extra == "dev"
Requires-Dist: ruff==0.2.2; extra == "dev"
Requires-Dist: Sphinx==7.2.6; extra == "dev"
Requires-Dist: sphinx-prompt==1.8; extra == "dev"
Requires-Dist: Sphinx-Substitution-Extensions==2022.2.16; extra == "dev"
Requires-Dist: sphinxcontrib-spelling==8; extra == "dev"
Requires-Dist: sybil==6.0.3; extra == "dev"
Requires-Dist: types-requests==2.31.0.20240125; extra == "dev"
Requires-Dist: uv==0.1.5; extra == "dev"
Requires-Dist: vulture==2.11; extra == "dev"
Requires-Dist: VWS-Python-Mock==2024.2.16; extra == "dev"
Requires-Dist: VWS-Test-Fixtures==2023.3.5; extra == "dev"

|Build Status| |codecov| |PyPI| |Documentation Status|

vws-python
==========

Python library for the Vuforia Web Services (VWS) API and the Vuforia
Web Query API.

Installation
------------

.. code:: sh

   pip install vws-python

This is tested on Python 3.12+. Get in touch with
``adamdangoor@gmail.com`` if you would like to use this with another
language.

Getting Started
---------------

.. invisible-code-block: python

   import contextlib
   import pathlib
   import shutil

   import vws_test_fixtures
   from mock_vws import MockVWS
   from mock_vws.database import VuforiaDatabase

   mock = MockVWS(real_http=False)
   database = VuforiaDatabase(
       server_access_key='[server-access-key]',
       server_secret_key='[server-secret-key]',
       client_access_key='[client-access-key]',
       client_secret_key='[client-secret-key]',
   )
   mock.add_database(database=database)
   stack = contextlib.ExitStack()
   stack.enter_context(mock)

   # We rely on implementation details of the fixtures package.
   image = pathlib.Path(vws_test_fixtures.__path__[0]) / 'high_quality_image.jpg'
   assert image.exists(), image.resolve()
   new_image = pathlib.Path('high_quality_image.jpg')
   shutil.copy(image, new_image)


.. code-block:: python

   import pathlib

   from vws import VWS, CloudRecoService

   server_access_key = '[server-access-key]'
   server_secret_key = '[server-secret-key]'
   client_access_key = '[client-access-key]'
   client_secret_key = '[client-secret-key]'

   vws_client = VWS(
       server_access_key=server_access_key,
       server_secret_key=server_secret_key,
   )
   cloud_reco_client = CloudRecoService(
       client_access_key=client_access_key,
       client_secret_key=client_secret_key,
   )
   name = 'my_image_name'

   image = pathlib.Path('high_quality_image.jpg')
   with image.open(mode='rb') as my_image_file:
       target_id = vws_client.add_target(
           name=name,
           width=1,
           image=my_image_file,
           active_flag=True,
           application_metadata=None,
       )
       vws_client.wait_for_target_processed(target_id=target_id)
       matching_targets = cloud_reco_client.query(image=my_image_file)

   assert matching_targets[0].target_id == target_id

.. invisible-code-block: python
   new_image = pathlib.Path('high_quality_image.jpg')
   new_image.unlink()
   stack.close()

Full Documentation
------------------

See the `full
documentation <https://vws-python.readthedocs.io/en/latest>`__.

.. |Build Status| image:: https://github.com/VWS-Python/vws-python/workflows/CI/badge.svg
   :target: https://github.com/VWS-Python/vws-python/actions
.. |codecov| image:: https://codecov.io/gh/VWS-Python/vws-python/branch/main/graph/badge.svg
   :target: https://codecov.io/gh/VWS-Python/vws-python
.. |PyPI| image:: https://badge.fury.io/py/VWS-Python.svg
   :target: https://badge.fury.io/py/VWS-Python
.. |Documentation Status| image:: https://readthedocs.org/projects/vws-python/badge/?version=latest
   :target: https://vws-python.readthedocs.io/en/latest/?badge=latest
