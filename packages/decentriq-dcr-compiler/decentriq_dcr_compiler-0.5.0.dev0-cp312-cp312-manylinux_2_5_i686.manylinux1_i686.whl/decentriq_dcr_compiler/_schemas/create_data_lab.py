# generated by datamodel-codegen:
#   filename:  create_data_lab.json

from __future__ import annotations

from enum import Enum
from typing import Optional, Union

from pydantic import BaseModel, Extra, Field, conint


class EnclaveSpecification(BaseModel):
    attestationProtoBase64: str
    id: str
    workerProtocol: conint(ge=0)


class FormatType(Enum):
    STRING = 'STRING'
    INTEGER = 'INTEGER'
    FLOAT = 'FLOAT'
    EMAIL = 'EMAIL'
    DATE_ISO8601 = 'DATE_ISO8601'
    PHONE_NUMBER_E164 = 'PHONE_NUMBER_E164'
    HASH_SHA256_HEX = 'HASH_SHA256_HEX'


class HashingAlgorithm(Enum):
    SHA256_HEX = 'SHA256_HEX'


class CreateDataLabComputeV0(BaseModel):
    authenticationRootCertificatePem: str
    driverEnclaveSpecification: EnclaveSpecification
    hasDemographics: bool
    hasEmbeddings: bool
    id: str
    matchingIdFormat: FormatType
    matchingIdHashingAlgorithm: Optional[Optional[HashingAlgorithm]] = None
    name: str
    numEmbeddings: conint(ge=0)
    publisherEmail: str
    pythonEnclaveSpecification: EnclaveSpecification


class CreateDataLabComputeV1(CreateDataLabComputeV0):
    pass


class CreateDataLabComputeV2(BaseModel):
    authenticationRootCertificatePem: str
    driverEnclaveSpecification: EnclaveSpecification
    hasDemographics: bool
    hasEmbeddings: bool
    hasSegments: bool
    id: str
    matchingIdFormat: FormatType
    matchingIdHashingAlgorithm: Optional[Optional[HashingAlgorithm]] = None
    name: str
    numEmbeddings: conint(ge=0)
    publisherEmail: str
    pythonEnclaveSpecification: EnclaveSpecification


class CreateDataLabItem(BaseModel):
    class Config:
        extra = Extra.forbid

    v0: CreateDataLabComputeV0


class CreateDataLabItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    v1: CreateDataLabComputeV1


class CreateDataLabItem2(BaseModel):
    class Config:
        extra = Extra.forbid

    v2: CreateDataLabComputeV2


class CreateDataLab(BaseModel):
    __root__: Union[CreateDataLabItem, CreateDataLabItem1, CreateDataLabItem2] = Field(
        ...,
        description='Arguments for constructing a specific DataLab version.',
        title='CreateDataLab',
    )
