# coding: utf-8

"""
    Maxpanda API V1

    The Maxpanda API documentation for version 1  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WorkOrderAudit(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_work_order': 'int',
        'id_work_order_audit': 'int',
        'details': 'str',
        'original_status': 'int',
        'current_status': 'int',
        'original_status_desc': 'str',
        'current_status_desc': 'str',
        'created_date': 'datetime',
        'created_by_name': 'str',
        'response_time_date': 'datetime',
        'processed_date': 'datetime',
        'response_time_notice_sent': 'bool'
    }

    attribute_map = {
        'id_work_order': 'idWorkOrder',
        'id_work_order_audit': 'idWorkOrderAudit',
        'details': 'Details',
        'original_status': 'OriginalStatus',
        'current_status': 'CurrentStatus',
        'original_status_desc': 'OriginalStatusDesc',
        'current_status_desc': 'CurrentStatusDesc',
        'created_date': 'CreatedDate',
        'created_by_name': 'CreatedByName',
        'response_time_date': 'ResponseTimeDate',
        'processed_date': 'ProcessedDate',
        'response_time_notice_sent': 'ResponseTimeNoticeSent'
    }

    def __init__(self, id_work_order=None, id_work_order_audit=None, details=None, original_status=None, current_status=None, original_status_desc=None, current_status_desc=None, created_date=None, created_by_name=None, response_time_date=None, processed_date=None, response_time_notice_sent=None):  # noqa: E501
        """WorkOrderAudit - a model defined in Swagger"""  # noqa: E501
        self._id_work_order = None
        self._id_work_order_audit = None
        self._details = None
        self._original_status = None
        self._current_status = None
        self._original_status_desc = None
        self._current_status_desc = None
        self._created_date = None
        self._created_by_name = None
        self._response_time_date = None
        self._processed_date = None
        self._response_time_notice_sent = None
        self.discriminator = None
        if id_work_order is not None:
            self.id_work_order = id_work_order
        if id_work_order_audit is not None:
            self.id_work_order_audit = id_work_order_audit
        if details is not None:
            self.details = details
        if original_status is not None:
            self.original_status = original_status
        if current_status is not None:
            self.current_status = current_status
        if original_status_desc is not None:
            self.original_status_desc = original_status_desc
        if current_status_desc is not None:
            self.current_status_desc = current_status_desc
        if created_date is not None:
            self.created_date = created_date
        if created_by_name is not None:
            self.created_by_name = created_by_name
        if response_time_date is not None:
            self.response_time_date = response_time_date
        if processed_date is not None:
            self.processed_date = processed_date
        if response_time_notice_sent is not None:
            self.response_time_notice_sent = response_time_notice_sent

    @property
    def id_work_order(self):
        """Gets the id_work_order of this WorkOrderAudit.  # noqa: E501


        :return: The id_work_order of this WorkOrderAudit.  # noqa: E501
        :rtype: int
        """
        return self._id_work_order

    @id_work_order.setter
    def id_work_order(self, id_work_order):
        """Sets the id_work_order of this WorkOrderAudit.


        :param id_work_order: The id_work_order of this WorkOrderAudit.  # noqa: E501
        :type: int
        """

        self._id_work_order = id_work_order

    @property
    def id_work_order_audit(self):
        """Gets the id_work_order_audit of this WorkOrderAudit.  # noqa: E501


        :return: The id_work_order_audit of this WorkOrderAudit.  # noqa: E501
        :rtype: int
        """
        return self._id_work_order_audit

    @id_work_order_audit.setter
    def id_work_order_audit(self, id_work_order_audit):
        """Sets the id_work_order_audit of this WorkOrderAudit.


        :param id_work_order_audit: The id_work_order_audit of this WorkOrderAudit.  # noqa: E501
        :type: int
        """

        self._id_work_order_audit = id_work_order_audit

    @property
    def details(self):
        """Gets the details of this WorkOrderAudit.  # noqa: E501


        :return: The details of this WorkOrderAudit.  # noqa: E501
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this WorkOrderAudit.


        :param details: The details of this WorkOrderAudit.  # noqa: E501
        :type: str
        """

        self._details = details

    @property
    def original_status(self):
        """Gets the original_status of this WorkOrderAudit.  # noqa: E501


        :return: The original_status of this WorkOrderAudit.  # noqa: E501
        :rtype: int
        """
        return self._original_status

    @original_status.setter
    def original_status(self, original_status):
        """Sets the original_status of this WorkOrderAudit.


        :param original_status: The original_status of this WorkOrderAudit.  # noqa: E501
        :type: int
        """

        self._original_status = original_status

    @property
    def current_status(self):
        """Gets the current_status of this WorkOrderAudit.  # noqa: E501


        :return: The current_status of this WorkOrderAudit.  # noqa: E501
        :rtype: int
        """
        return self._current_status

    @current_status.setter
    def current_status(self, current_status):
        """Sets the current_status of this WorkOrderAudit.


        :param current_status: The current_status of this WorkOrderAudit.  # noqa: E501
        :type: int
        """

        self._current_status = current_status

    @property
    def original_status_desc(self):
        """Gets the original_status_desc of this WorkOrderAudit.  # noqa: E501


        :return: The original_status_desc of this WorkOrderAudit.  # noqa: E501
        :rtype: str
        """
        return self._original_status_desc

    @original_status_desc.setter
    def original_status_desc(self, original_status_desc):
        """Sets the original_status_desc of this WorkOrderAudit.


        :param original_status_desc: The original_status_desc of this WorkOrderAudit.  # noqa: E501
        :type: str
        """

        self._original_status_desc = original_status_desc

    @property
    def current_status_desc(self):
        """Gets the current_status_desc of this WorkOrderAudit.  # noqa: E501


        :return: The current_status_desc of this WorkOrderAudit.  # noqa: E501
        :rtype: str
        """
        return self._current_status_desc

    @current_status_desc.setter
    def current_status_desc(self, current_status_desc):
        """Sets the current_status_desc of this WorkOrderAudit.


        :param current_status_desc: The current_status_desc of this WorkOrderAudit.  # noqa: E501
        :type: str
        """

        self._current_status_desc = current_status_desc

    @property
    def created_date(self):
        """Gets the created_date of this WorkOrderAudit.  # noqa: E501


        :return: The created_date of this WorkOrderAudit.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this WorkOrderAudit.


        :param created_date: The created_date of this WorkOrderAudit.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def created_by_name(self):
        """Gets the created_by_name of this WorkOrderAudit.  # noqa: E501


        :return: The created_by_name of this WorkOrderAudit.  # noqa: E501
        :rtype: str
        """
        return self._created_by_name

    @created_by_name.setter
    def created_by_name(self, created_by_name):
        """Sets the created_by_name of this WorkOrderAudit.


        :param created_by_name: The created_by_name of this WorkOrderAudit.  # noqa: E501
        :type: str
        """

        self._created_by_name = created_by_name

    @property
    def response_time_date(self):
        """Gets the response_time_date of this WorkOrderAudit.  # noqa: E501


        :return: The response_time_date of this WorkOrderAudit.  # noqa: E501
        :rtype: datetime
        """
        return self._response_time_date

    @response_time_date.setter
    def response_time_date(self, response_time_date):
        """Sets the response_time_date of this WorkOrderAudit.


        :param response_time_date: The response_time_date of this WorkOrderAudit.  # noqa: E501
        :type: datetime
        """

        self._response_time_date = response_time_date

    @property
    def processed_date(self):
        """Gets the processed_date of this WorkOrderAudit.  # noqa: E501


        :return: The processed_date of this WorkOrderAudit.  # noqa: E501
        :rtype: datetime
        """
        return self._processed_date

    @processed_date.setter
    def processed_date(self, processed_date):
        """Sets the processed_date of this WorkOrderAudit.


        :param processed_date: The processed_date of this WorkOrderAudit.  # noqa: E501
        :type: datetime
        """

        self._processed_date = processed_date

    @property
    def response_time_notice_sent(self):
        """Gets the response_time_notice_sent of this WorkOrderAudit.  # noqa: E501


        :return: The response_time_notice_sent of this WorkOrderAudit.  # noqa: E501
        :rtype: bool
        """
        return self._response_time_notice_sent

    @response_time_notice_sent.setter
    def response_time_notice_sent(self, response_time_notice_sent):
        """Sets the response_time_notice_sent of this WorkOrderAudit.


        :param response_time_notice_sent: The response_time_notice_sent of this WorkOrderAudit.  # noqa: E501
        :type: bool
        """

        self._response_time_notice_sent = response_time_notice_sent

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WorkOrderAudit, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WorkOrderAudit):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
