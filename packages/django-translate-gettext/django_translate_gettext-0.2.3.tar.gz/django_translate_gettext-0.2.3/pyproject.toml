[tool.poetry]
name = "django-translate-gettext"
version = "0.2.3"
description = "Django app to wrap app files class fields to gettext calling for the given apps"
authors = ["Denis Novikov <alpden550@gmail.com>"]
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation",
    "Environment :: Web Environment",
    'License :: OSI Approved :: MIT License',
    "Framework :: Django",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Utilities",
]
license = "MIT License"
homepage = 'https://github.com/alpden550/django-translate-gettext'
repository = 'https://github.com/alpden550/django-translate-gettext'
keywords = ["django", "django-orm", "django app", "ast", "orm"]

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.0.1"
loguru = "^0.7.2"
ruff = "^0.2.1"

[tool.poetry.group.dev.dependencies]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
exclude = [
  ".venv",
  "*migrations*",
  "manage.py",
]

[tool.ruff.lint]
ignore-init-module-imports = true
preview = true
explicit-preview-rules = true
select = [
  "E",    # pycodestyle
  "W",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "A",    # flake8-builtins
  "COM",  # flake8-commas
  "T20",  # flake8-print
  "Q",    # flake8-quotes
  "BLE",  # flake8-blind-except
  "N",    # pep8-naming
  "UP",   # pyupgrade
  "B",    # flake8-bugbear
  "SIM", # flake8-simplify
  "N",    # pep8-naming
  "S",    # flake8-bandit
  "FBT",  # flake8-boolean-trap
  "C4",   # flake8-comprehensions
  "PIE",  # flake8-pie
  "T",    # flake8-print
  "PT",   # flake8-pytest-style
  "RET",  # flake8-return
  "TID",  # flake8-tidy-imports
  "ERA",  # flake8-eradicate
  "PL",   # Pylint
  "TRY",  # tryceratops
  "PERF", # Perflint
  "FURB", # refurb
  "RUF",  # ruff
  "PTH",  # flake8-use-pathlib
  "C90", # mccabe
  "EM", # flake8-errmsg
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions,
  "G", # flake8-logging-forma
  "DTZ", # flake8-datetimez
  "EXE", # flake8-executable
  "INP", # flake8-no-pep420
  "RSE", # flake8-raise,
  "ARG", # flake8-unused-arguments
  "TD", # flake8-todos
  "FLY", # flynt,
]
ignore= ["S101", "COM812", "ISC001"]

[tool.ruff.format]
preview = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"
