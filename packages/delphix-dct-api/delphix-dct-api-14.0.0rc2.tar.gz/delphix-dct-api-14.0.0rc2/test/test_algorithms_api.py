"""
    Delphix DCT API

    Delphix DCT API  # noqa: E501

    The version of the OpenAPI document: 3.9.0
    Contact: support@delphix.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import delphix.api.gateway
from delphix.api.gateway.api.algorithms_api import AlgorithmsApi  # noqa: E501


class TestAlgorithmsApi(unittest.TestCase):
    """AlgorithmsApi unit test stubs"""

    def setUp(self):
        self.api = AlgorithmsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_algorithm(self):
        """Test case for create_algorithm

        Create a new algorithm.  # noqa: E501
        """
        pass

    def test_create_algorithm_revision(self):
        """Test case for create_algorithm_revision

        Create a new algorithm revision.  # noqa: E501
        """
        pass

    def test_create_algorithm_revision_tags(self):
        """Test case for create_algorithm_revision_tags

        Create tags for an AlgorithmRevision.  # noqa: E501
        """
        pass

    def test_create_algorithm_tags(self):
        """Test case for create_algorithm_tags

        Create tags for an Algorithm.  # noqa: E501
        """
        pass

    def test_delete_algorithm(self):
        """Test case for delete_algorithm

        Delete an algorithm.  # noqa: E501
        """
        pass

    def test_delete_algorithm_revision(self):
        """Test case for delete_algorithm_revision

        Delete an algorithm revision.  # noqa: E501
        """
        pass

    def test_delete_algorithm_revision_tags(self):
        """Test case for delete_algorithm_revision_tags

        Delete tags for an AlgorithmRevision.  # noqa: E501
        """
        pass

    def test_delete_algorithm_tags(self):
        """Test case for delete_algorithm_tags

        Delete tags for an Algorithm.  # noqa: E501
        """
        pass

    def test_get_algorithm_by_id(self):
        """Test case for get_algorithm_by_id

        Get an algorithm by ID.  # noqa: E501
        """
        pass

    def test_get_algorithm_revision_by_id(self):
        """Test case for get_algorithm_revision_by_id

        Retrieve a specific revision of an algorithm.  # noqa: E501
        """
        pass

    def test_get_algorithm_revision_tags(self):
        """Test case for get_algorithm_revision_tags

        Get tags for an AlgorithmRevision.  # noqa: E501
        """
        pass

    def test_get_algorithm_revisions(self):
        """Test case for get_algorithm_revisions

        Retrieve the list of algorithm revisions for the algorithm.  # noqa: E501
        """
        pass

    def test_get_algorithm_tags(self):
        """Test case for get_algorithm_tags

        Get tags for an Algorithm.  # noqa: E501
        """
        pass

    def test_get_algorithms(self):
        """Test case for get_algorithms

        Retrieve the list of algorithms.  # noqa: E501
        """
        pass

    def test_search_algorithm_revisions(self):
        """Test case for search_algorithm_revisions

        Search for algorithm revisions.  # noqa: E501
        """
        pass

    def test_search_algorithms(self):
        """Test case for search_algorithms

        Search for algorithms.  # noqa: E501
        """
        pass

    def test_set_algorithm_primary_revision(self):
        """Test case for set_algorithm_primary_revision

        Set an algorithm revision to be the primary revision for the algorithm.  # noqa: E501
        """
        pass

    def test_update_algorithm_revision(self):
        """Test case for update_algorithm_revision

        Update an algorithm revision  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
