from evalml.automl.automl_search import AutoMLSearch as __AutoMLSearch


class AutoMLSearch(__AutoMLSearch):
    def __init__(
        self,
        X_train=None,
        y_train=None,
        X_holdout=None,
        y_holdout=None,
        problem_type=None,
        objective="auto",
        max_iterations=None,
        max_time=None,
        patience=None,
        tolerance=None,
        data_splitter=None,
        allowed_component_graphs=None,
        allowed_model_families=None,
        features=None,
        start_iteration_callback=None,
        add_result_callback=None,
        error_callback=None,
        additional_objectives=None,
        alternate_thresholding_objective="F1",
        random_seed=0,
        n_jobs=-1,
        tuner_class=None,
        optimize_thresholds=True,
        ensembling=False,
        max_batches=None,
        problem_configuration=None,
        train_best_pipeline=True,
        search_parameters=None,
        sampler_method="auto",
        sampler_balanced_ratio=0.25,
        allow_long_running_models=False,
        _pipelines_per_batch=5,
        automl_algorithm="default",
        engine="sequential",
        verbose=False,
        timing=False,
        exclude_featurizers=None,
        holdout_set_size=0,
    ):
        super().__init__(
            X_train,
            y_train,
            X_holdout,
            y_holdout,
            problem_type,
            objective,
            max_iterations,
            max_time,
            patience,
            tolerance,
            data_splitter,
            allowed_component_graphs,
            allowed_model_families,
            features,
            start_iteration_callback,
            add_result_callback,
            error_callback,
            additional_objectives,
            alternate_thresholding_objective,
            random_seed,
            n_jobs,
            tuner_class,
            optimize_thresholds,
            ensembling,
            max_batches,
            problem_configuration,
            train_best_pipeline,
            search_parameters,
            sampler_method,
            sampler_balanced_ratio,
            allow_long_running_models,
            _pipelines_per_batch,
            automl_algorithm,
            engine,
            verbose,
            timing,
            exclude_featurizers,
            holdout_set_size,
        )