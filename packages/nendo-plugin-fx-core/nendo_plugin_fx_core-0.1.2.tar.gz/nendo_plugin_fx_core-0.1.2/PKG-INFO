Metadata-Version: 2.1
Name: nendo-plugin-fx-core
Version: 0.1.2
Summary: NendoFX plugin: Use common audio effects out of the box.
Home-page: https://okio.ai
License: GPL-3.0-only
Keywords: nendo,music,audio effect,compressor,reverb,filter,equalizer,distortion,phaser,chorus,filter,eq,digital signal processing,dsp,pedalboard,nendo effects,plugin
Author: Aaron Abebe
Author-email: aaron@okio.ai
Requires-Python: >=3.8,<3.11
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Multimedia :: Sound/Audio
Requires-Dist: nendo (>=0.2.0,<0.3.0)
Requires-Dist: pedalboard (==0.8.3)
Requires-Dist: pydantic (>=2.0.0,<2.5.0)
Requires-Dist: pydantic-settings (>=2.1.0,<3.0.0)
Project-URL: Repository, https://github.com/okio-ai/nendo_plugin_fx_core
Description-Content-Type: text/markdown

# Nendo Plugin FX Core

<br>
<p align="left">
    <img src="https://okio.ai/docs/assets/nendo_core_logo.png" width="350" alt="Nendo Core">
</p>
<br>

<p align="left">
<a href="https://okio.ai" target="_blank">
    <img src="https://img.shields.io/website/https/okio.ai" alt="Website">
</a>
<a href="https://twitter.com/okio_ai" target="_blank">
    <img src="https://img.shields.io/twitter/url/https/twitter.com/okio_ai.svg?style=social&label=Follow%20%40okio_ai" alt="Twitter">
</a>
<a href="https://discord.gg/gaZMZKzScj" target="_blank">
    <img src="https://dcbadge.vercel.app/api/server/XpkUsjwXTp?compact=true&style=flat" alt="Discord">
</a>
</p>

---

NendoFX: Use common audio effects out of the box (based on [pedalboard](https://github.com/spotify/pedalboard) by Spotify Research).

## Features

- Apply well known audio effects to a `NendoTrack`
- modulation via: `chorus`, `phaser`
- different filters: `lowpass`, `highpass`, `low_shelf`, `high_shelf`
- adaptive processing based on MIR features via: `limiter`
- custom effects like: `stereo`
- also basics like: `distortion`, `reverb`, `delay`, `compressor`

## Installation

1. [Install Nendo](https://github.com/okio-ai/nendo#installation)
2. `pip install nendo-plugin-fx-core`

## Usage

Take a look at a basic usage example below.
For more detailed information, please refer to the [documentation](https://okio.ai/docs/plugins).

For more advanced examples, check out the examples folder.
or try it in colab:

<a target="_blank" href="https://colab.research.google.com/drive/1wSGM2lhgP1z8gL2cVOErzot9m9AJ1zCU?usp=sharing">
    <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>

```python
from nendo import Nendo, NendoConfig

nd = Nendo(config=NendoConfig(plugins=["nendo_plugin_fx_core"]))

track = nd.library.add_track(file_path='/path/to/track.mp3')


track = nd.plugins.fx_core.compressor(track=track)
track = nd.plugins.fx_core.reverb(
    track=track,
    wet_level=0.2,
    dry_level=0.8,
    room_size=0.1,
)
track = nd.plugins.fx_core.limiter(track=track)
track.play()
```

## Contributing

Visit our docs to learn all about how to contribute to Nendo: [Contributing](https://okio.ai/docs/contributing/)

## Licence

Nendo: MIT

Pedalboard: GPL3

For additional licences check https://github.com/spotify/pedalboard

